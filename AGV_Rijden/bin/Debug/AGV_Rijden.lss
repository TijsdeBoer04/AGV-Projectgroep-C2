
bin\Debug\AGV_Rijden.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800200  00001570  00001604  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001570  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  0000160c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 000001a0  00000000  00000000  0000160f  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000290  00000000  00000000  000017af  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002096  00000000  00000000  00001a3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000010de  00000000  00000000  00003ad5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000013c2  00000000  00000000  00004bb3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000240  00000000  00000000  00005f78  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e7  00000000  00000000  000061b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ce  00000000  00000000  0000659f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00006d6d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      34:	0c 94 2e 02 	jmp	0x45c	; 0x45c <__vector_13>
      38:	0c 94 5a 02 	jmp	0x4b4	; 0x4b4 <__vector_14>
      3c:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__vector_15>
      40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      44:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      48:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      50:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      54:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__vector_21>
      58:	0c 94 19 01 	jmp	0x232	; 0x232 <__vector_22>
      5c:	0c 94 8d 00 	jmp	0x11a	; 0x11a <__vector_23>
      60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      68:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      6c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      70:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      74:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      78:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      7c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      80:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      84:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      88:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      8c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      90:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      94:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      98:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      9c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      ac:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      bc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      cc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      dc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      e0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e0 e7       	ldi	r30, 0x70	; 112
      fc:	f5 e1       	ldi	r31, 0x15	; 21
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
     10e:	0e 94 0f 03 	call	0x61e	; 0x61e <main>
     112:	0c 94 b6 0a 	jmp	0x156c	; 0x156c <_exit>

00000116 <__bad_interrupt>:
     116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <__vector_23>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "h_bridge_a.h"

ISR(TIMER0_OVF_vect)
{
     11a:	1f 92       	push	r1
     11c:	0f 92       	push	r0
     11e:	0f b6       	in	r0, 0x3f	; 63
     120:	0f 92       	push	r0
     122:	00 90 5b 00 	lds	r0, 0x005B
     126:	0f 92       	push	r0
     128:	11 24       	eor	r1, r1
     12a:	8f 93       	push	r24
     12c:	af 93       	push	r26
     12e:	bf 93       	push	r27
     130:	ef 93       	push	r30
     132:	ff 93       	push	r31
     134:	df 93       	push	r29
     136:	cf 93       	push	r28
     138:	cd b7       	in	r28, 0x3d	; 61
     13a:	de b7       	in	r29, 0x3e	; 62
	if (OCR0A == 0 && OCR0B == 0)
     13c:	e7 e4       	ldi	r30, 0x47	; 71
     13e:	f0 e0       	ldi	r31, 0x00	; 0
     140:	80 81       	ld	r24, Z
     142:	88 23       	and	r24, r24
     144:	a1 f4       	brne	.+40     	; 0x16e <__vector_23+0x54>
     146:	e8 e4       	ldi	r30, 0x48	; 72
     148:	f0 e0       	ldi	r31, 0x00	; 0
     14a:	80 81       	ld	r24, Z
     14c:	88 23       	and	r24, r24
     14e:	79 f4       	brne	.+30     	; 0x16e <__vector_23+0x54>
	{
		PORT_RPWM_A &= ~(1<<PIN_RPWM_A);
     150:	a4 e3       	ldi	r26, 0x34	; 52
     152:	b0 e0       	ldi	r27, 0x00	; 0
     154:	e4 e3       	ldi	r30, 0x34	; 52
     156:	f0 e0       	ldi	r31, 0x00	; 0
     158:	80 81       	ld	r24, Z
     15a:	8f 7d       	andi	r24, 0xDF	; 223
     15c:	8c 93       	st	X, r24
		PORT_LPWM_A &= ~(1<<PIN_LPWM_A);
     15e:	a5 e2       	ldi	r26, 0x25	; 37
     160:	b0 e0       	ldi	r27, 0x00	; 0
     162:	e5 e2       	ldi	r30, 0x25	; 37
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	80 81       	ld	r24, Z
     168:	8f 77       	andi	r24, 0x7F	; 127
     16a:	8c 93       	st	X, r24
     16c:	27 c0       	rjmp	.+78     	; 0x1bc <__vector_23+0xa2>
	}
	else if (OCR0A != 0)
     16e:	e7 e4       	ldi	r30, 0x47	; 71
     170:	f0 e0       	ldi	r31, 0x00	; 0
     172:	80 81       	ld	r24, Z
     174:	88 23       	and	r24, r24
     176:	79 f0       	breq	.+30     	; 0x196 <__vector_23+0x7c>
	{
		PORT_LPWM_A&= ~(1<<PIN_LPWM_A);
     178:	a5 e2       	ldi	r26, 0x25	; 37
     17a:	b0 e0       	ldi	r27, 0x00	; 0
     17c:	e5 e2       	ldi	r30, 0x25	; 37
     17e:	f0 e0       	ldi	r31, 0x00	; 0
     180:	80 81       	ld	r24, Z
     182:	8f 77       	andi	r24, 0x7F	; 127
     184:	8c 93       	st	X, r24
		PORT_RPWM_A |= (1<<PIN_RPWM_A);
     186:	a4 e3       	ldi	r26, 0x34	; 52
     188:	b0 e0       	ldi	r27, 0x00	; 0
     18a:	e4 e3       	ldi	r30, 0x34	; 52
     18c:	f0 e0       	ldi	r31, 0x00	; 0
     18e:	80 81       	ld	r24, Z
     190:	80 62       	ori	r24, 0x20	; 32
     192:	8c 93       	st	X, r24
     194:	13 c0       	rjmp	.+38     	; 0x1bc <__vector_23+0xa2>
	}
	else if (OCR0B != 0)
     196:	e8 e4       	ldi	r30, 0x48	; 72
     198:	f0 e0       	ldi	r31, 0x00	; 0
     19a:	80 81       	ld	r24, Z
     19c:	88 23       	and	r24, r24
     19e:	71 f0       	breq	.+28     	; 0x1bc <__vector_23+0xa2>
	{
		PORT_RPWM_A &= ~(1<<PIN_RPWM_A);
     1a0:	a4 e3       	ldi	r26, 0x34	; 52
     1a2:	b0 e0       	ldi	r27, 0x00	; 0
     1a4:	e4 e3       	ldi	r30, 0x34	; 52
     1a6:	f0 e0       	ldi	r31, 0x00	; 0
     1a8:	80 81       	ld	r24, Z
     1aa:	8f 7d       	andi	r24, 0xDF	; 223
     1ac:	8c 93       	st	X, r24
		PORT_LPWM_A |= (1<<PIN_LPWM_A);
     1ae:	a5 e2       	ldi	r26, 0x25	; 37
     1b0:	b0 e0       	ldi	r27, 0x00	; 0
     1b2:	e5 e2       	ldi	r30, 0x25	; 37
     1b4:	f0 e0       	ldi	r31, 0x00	; 0
     1b6:	80 81       	ld	r24, Z
     1b8:	80 68       	ori	r24, 0x80	; 128
     1ba:	8c 93       	st	X, r24
	}
}
     1bc:	cf 91       	pop	r28
     1be:	df 91       	pop	r29
     1c0:	ff 91       	pop	r31
     1c2:	ef 91       	pop	r30
     1c4:	bf 91       	pop	r27
     1c6:	af 91       	pop	r26
     1c8:	8f 91       	pop	r24
     1ca:	0f 90       	pop	r0
     1cc:	00 92 5b 00 	sts	0x005B, r0
     1d0:	0f 90       	pop	r0
     1d2:	0f be       	out	0x3f, r0	; 63
     1d4:	0f 90       	pop	r0
     1d6:	1f 90       	pop	r1
     1d8:	18 95       	reti

000001da <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
     1da:	1f 92       	push	r1
     1dc:	0f 92       	push	r0
     1de:	0f b6       	in	r0, 0x3f	; 63
     1e0:	0f 92       	push	r0
     1e2:	00 90 5b 00 	lds	r0, 0x005B
     1e6:	0f 92       	push	r0
     1e8:	11 24       	eor	r1, r1
     1ea:	8f 93       	push	r24
     1ec:	af 93       	push	r26
     1ee:	bf 93       	push	r27
     1f0:	ef 93       	push	r30
     1f2:	ff 93       	push	r31
     1f4:	df 93       	push	r29
     1f6:	cf 93       	push	r28
     1f8:	cd b7       	in	r28, 0x3d	; 61
     1fa:	de b7       	in	r29, 0x3e	; 62
	if (OCR0A != 255)
     1fc:	e7 e4       	ldi	r30, 0x47	; 71
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	80 81       	ld	r24, Z
     202:	8f 3f       	cpi	r24, 0xFF	; 255
     204:	39 f0       	breq	.+14     	; 0x214 <__vector_21+0x3a>
	{
		PORT_RPWM_A &= ~(1<<PIN_RPWM_A);
     206:	a4 e3       	ldi	r26, 0x34	; 52
     208:	b0 e0       	ldi	r27, 0x00	; 0
     20a:	e4 e3       	ldi	r30, 0x34	; 52
     20c:	f0 e0       	ldi	r31, 0x00	; 0
     20e:	80 81       	ld	r24, Z
     210:	8f 7d       	andi	r24, 0xDF	; 223
     212:	8c 93       	st	X, r24
	}
}
     214:	cf 91       	pop	r28
     216:	df 91       	pop	r29
     218:	ff 91       	pop	r31
     21a:	ef 91       	pop	r30
     21c:	bf 91       	pop	r27
     21e:	af 91       	pop	r26
     220:	8f 91       	pop	r24
     222:	0f 90       	pop	r0
     224:	00 92 5b 00 	sts	0x005B, r0
     228:	0f 90       	pop	r0
     22a:	0f be       	out	0x3f, r0	; 63
     22c:	0f 90       	pop	r0
     22e:	1f 90       	pop	r1
     230:	18 95       	reti

00000232 <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
     232:	1f 92       	push	r1
     234:	0f 92       	push	r0
     236:	0f b6       	in	r0, 0x3f	; 63
     238:	0f 92       	push	r0
     23a:	00 90 5b 00 	lds	r0, 0x005B
     23e:	0f 92       	push	r0
     240:	11 24       	eor	r1, r1
     242:	8f 93       	push	r24
     244:	af 93       	push	r26
     246:	bf 93       	push	r27
     248:	ef 93       	push	r30
     24a:	ff 93       	push	r31
     24c:	df 93       	push	r29
     24e:	cf 93       	push	r28
     250:	cd b7       	in	r28, 0x3d	; 61
     252:	de b7       	in	r29, 0x3e	; 62
	if (OCR0B != 255)
     254:	e8 e4       	ldi	r30, 0x48	; 72
     256:	f0 e0       	ldi	r31, 0x00	; 0
     258:	80 81       	ld	r24, Z
     25a:	8f 3f       	cpi	r24, 0xFF	; 255
     25c:	39 f0       	breq	.+14     	; 0x26c <__vector_22+0x3a>
	{
		PORT_LPWM_A &= ~(1<<PIN_LPWM_A);
     25e:	a5 e2       	ldi	r26, 0x25	; 37
     260:	b0 e0       	ldi	r27, 0x00	; 0
     262:	e5 e2       	ldi	r30, 0x25	; 37
     264:	f0 e0       	ldi	r31, 0x00	; 0
     266:	80 81       	ld	r24, Z
     268:	8f 77       	andi	r24, 0x7F	; 127
     26a:	8c 93       	st	X, r24
	}
}
     26c:	cf 91       	pop	r28
     26e:	df 91       	pop	r29
     270:	ff 91       	pop	r31
     272:	ef 91       	pop	r30
     274:	bf 91       	pop	r27
     276:	af 91       	pop	r26
     278:	8f 91       	pop	r24
     27a:	0f 90       	pop	r0
     27c:	00 92 5b 00 	sts	0x005B, r0
     280:	0f 90       	pop	r0
     282:	0f be       	out	0x3f, r0	; 63
     284:	0f 90       	pop	r0
     286:	1f 90       	pop	r1
     288:	18 95       	reti

0000028a <init_h_bridge_a>:

void init_h_bridge_a(void)
{
     28a:	df 93       	push	r29
     28c:	cf 93       	push	r28
     28e:	cd b7       	in	r28, 0x3d	; 61
     290:	de b7       	in	r29, 0x3e	; 62
	// Config pins as output
	DDR_RPWM_A |= (1<<PIN_RPWM_A);
     292:	a3 e3       	ldi	r26, 0x33	; 51
     294:	b0 e0       	ldi	r27, 0x00	; 0
     296:	e3 e3       	ldi	r30, 0x33	; 51
     298:	f0 e0       	ldi	r31, 0x00	; 0
     29a:	80 81       	ld	r24, Z
     29c:	80 62       	ori	r24, 0x20	; 32
     29e:	8c 93       	st	X, r24
	DDR_LPWM_A |= (1<<PIN_LPWM_A);
     2a0:	a4 e2       	ldi	r26, 0x24	; 36
     2a2:	b0 e0       	ldi	r27, 0x00	; 0
     2a4:	e4 e2       	ldi	r30, 0x24	; 36
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	80 81       	ld	r24, Z
     2aa:	80 68       	ori	r24, 0x80	; 128
     2ac:	8c 93       	st	X, r24

	// Output low
	PORT_RPWM_A &= ~(1<<PIN_RPWM_A);
     2ae:	a4 e3       	ldi	r26, 0x34	; 52
     2b0:	b0 e0       	ldi	r27, 0x00	; 0
     2b2:	e4 e3       	ldi	r30, 0x34	; 52
     2b4:	f0 e0       	ldi	r31, 0x00	; 0
     2b6:	80 81       	ld	r24, Z
     2b8:	8f 7d       	andi	r24, 0xDF	; 223
     2ba:	8c 93       	st	X, r24
	PORT_LPWM_A &= ~(1<<PIN_LPWM_A);
     2bc:	a5 e2       	ldi	r26, 0x25	; 37
     2be:	b0 e0       	ldi	r27, 0x00	; 0
     2c0:	e5 e2       	ldi	r30, 0x25	; 37
     2c2:	f0 e0       	ldi	r31, 0x00	; 0
     2c4:	80 81       	ld	r24, Z
     2c6:	8f 77       	andi	r24, 0x7F	; 127
     2c8:	8c 93       	st	X, r24

	// Use mode 0, clkdiv = 64
	TCCR0A = 0;
     2ca:	e4 e4       	ldi	r30, 0x44	; 68
     2cc:	f0 e0       	ldi	r31, 0x00	; 0
     2ce:	10 82       	st	Z, r1
	TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
     2d0:	e5 e4       	ldi	r30, 0x45	; 69
     2d2:	f0 e0       	ldi	r31, 0x00	; 0
     2d4:	83 e0       	ldi	r24, 0x03	; 3
     2d6:	80 83       	st	Z, r24

	// Disable PWM output
	OCR0A = 0;
     2d8:	e7 e4       	ldi	r30, 0x47	; 71
     2da:	f0 e0       	ldi	r31, 0x00	; 0
     2dc:	10 82       	st	Z, r1
	OCR0B = 0;
     2de:	e8 e4       	ldi	r30, 0x48	; 72
     2e0:	f0 e0       	ldi	r31, 0x00	; 0
     2e2:	10 82       	st	Z, r1

	// Interrupts on OCA, OCB and OVF
	TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
     2e4:	ee e6       	ldi	r30, 0x6E	; 110
     2e6:	f0 e0       	ldi	r31, 0x00	; 0
     2e8:	87 e0       	ldi	r24, 0x07	; 7
     2ea:	80 83       	st	Z, r24

	sei();
     2ec:	78 94       	sei
}
     2ee:	cf 91       	pop	r28
     2f0:	df 91       	pop	r29
     2f2:	08 95       	ret

000002f4 <h_bridge_set_percentage_a>:

void h_bridge_set_percentage_a(signed char percentage)
{
     2f4:	df 93       	push	r29
     2f6:	cf 93       	push	r28
     2f8:	0f 92       	push	r0
     2fa:	cd b7       	in	r28, 0x3d	; 61
     2fc:	de b7       	in	r29, 0x3e	; 62
     2fe:	89 83       	std	Y+1, r24	; 0x01
	if (percentage >= -100 && percentage <= 100)
     300:	89 81       	ldd	r24, Y+1	; 0x01
     302:	8c 39       	cpi	r24, 0x9C	; 156
     304:	0c f4       	brge	.+2      	; 0x308 <h_bridge_set_percentage_a+0x14>
     306:	46 c0       	rjmp	.+140    	; 0x394 <h_bridge_set_percentage_a+0xa0>
     308:	89 81       	ldd	r24, Y+1	; 0x01
     30a:	85 36       	cpi	r24, 0x65	; 101
     30c:	0c f0       	brlt	.+2      	; 0x310 <h_bridge_set_percentage_a+0x1c>
     30e:	42 c0       	rjmp	.+132    	; 0x394 <h_bridge_set_percentage_a+0xa0>
	{
		if (percentage >= 0)
     310:	89 81       	ldd	r24, Y+1	; 0x01
     312:	88 23       	and	r24, r24
     314:	04 f1       	brlt	.+64     	; 0x356 <h_bridge_set_percentage_a+0x62>
		{
			// Disable LPWM, calculate RPWM
			OCR0B = 0;
     316:	e8 e4       	ldi	r30, 0x48	; 72
     318:	f0 e0       	ldi	r31, 0x00	; 0
     31a:	10 82       	st	Z, r1
			OCR0A = (255*percentage)/100;
     31c:	e7 e4       	ldi	r30, 0x47	; 71
     31e:	f0 e0       	ldi	r31, 0x00	; 0
     320:	89 81       	ldd	r24, Y+1	; 0x01
     322:	48 2f       	mov	r20, r24
     324:	55 27       	eor	r21, r21
     326:	47 fd       	sbrc	r20, 7
     328:	50 95       	com	r21
     32a:	ca 01       	movw	r24, r20
     32c:	9c 01       	movw	r18, r24
     32e:	22 0f       	add	r18, r18
     330:	33 1f       	adc	r19, r19
     332:	c9 01       	movw	r24, r18
     334:	96 95       	lsr	r25
     336:	98 2f       	mov	r25, r24
     338:	88 27       	eor	r24, r24
     33a:	97 95       	ror	r25
     33c:	87 95       	ror	r24
     33e:	82 1b       	sub	r24, r18
     340:	93 0b       	sbc	r25, r19
     342:	84 0f       	add	r24, r20
     344:	95 1f       	adc	r25, r21
     346:	24 e6       	ldi	r18, 0x64	; 100
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	b9 01       	movw	r22, r18
     34c:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__divmodhi4>
     350:	cb 01       	movw	r24, r22
     352:	80 83       	st	Z, r24
     354:	1f c0       	rjmp	.+62     	; 0x394 <h_bridge_set_percentage_a+0xa0>
		}
		else // percentage < 0
		{
			// Disable RPWM, calculate LPWM
			OCR0A = 0;
     356:	e7 e4       	ldi	r30, 0x47	; 71
     358:	f0 e0       	ldi	r31, 0x00	; 0
     35a:	10 82       	st	Z, r1
			OCR0B = (255*percentage)/-100;
     35c:	e8 e4       	ldi	r30, 0x48	; 72
     35e:	f0 e0       	ldi	r31, 0x00	; 0
     360:	89 81       	ldd	r24, Y+1	; 0x01
     362:	48 2f       	mov	r20, r24
     364:	55 27       	eor	r21, r21
     366:	47 fd       	sbrc	r20, 7
     368:	50 95       	com	r21
     36a:	ca 01       	movw	r24, r20
     36c:	9c 01       	movw	r18, r24
     36e:	22 0f       	add	r18, r18
     370:	33 1f       	adc	r19, r19
     372:	c9 01       	movw	r24, r18
     374:	96 95       	lsr	r25
     376:	98 2f       	mov	r25, r24
     378:	88 27       	eor	r24, r24
     37a:	97 95       	ror	r25
     37c:	87 95       	ror	r24
     37e:	82 1b       	sub	r24, r18
     380:	93 0b       	sbc	r25, r19
     382:	84 0f       	add	r24, r20
     384:	95 1f       	adc	r25, r21
     386:	2c e9       	ldi	r18, 0x9C	; 156
     388:	3f ef       	ldi	r19, 0xFF	; 255
     38a:	b9 01       	movw	r22, r18
     38c:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__divmodhi4>
     390:	cb 01       	movw	r24, r22
     392:	80 83       	st	Z, r24
		}
	}
}
     394:	0f 90       	pop	r0
     396:	cf 91       	pop	r28
     398:	df 91       	pop	r29
     39a:	08 95       	ret

0000039c <__vector_15>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "h_bridge_b.h"

ISR(TIMER2_OVF_vect)
{
     39c:	1f 92       	push	r1
     39e:	0f 92       	push	r0
     3a0:	0f b6       	in	r0, 0x3f	; 63
     3a2:	0f 92       	push	r0
     3a4:	00 90 5b 00 	lds	r0, 0x005B
     3a8:	0f 92       	push	r0
     3aa:	11 24       	eor	r1, r1
     3ac:	8f 93       	push	r24
     3ae:	af 93       	push	r26
     3b0:	bf 93       	push	r27
     3b2:	ef 93       	push	r30
     3b4:	ff 93       	push	r31
     3b6:	df 93       	push	r29
     3b8:	cf 93       	push	r28
     3ba:	cd b7       	in	r28, 0x3d	; 61
     3bc:	de b7       	in	r29, 0x3e	; 62
	if (OCR2A == 0 && OCR2B == 0)
     3be:	e3 eb       	ldi	r30, 0xB3	; 179
     3c0:	f0 e0       	ldi	r31, 0x00	; 0
     3c2:	80 81       	ld	r24, Z
     3c4:	88 23       	and	r24, r24
     3c6:	a1 f4       	brne	.+40     	; 0x3f0 <__vector_15+0x54>
     3c8:	e4 eb       	ldi	r30, 0xB4	; 180
     3ca:	f0 e0       	ldi	r31, 0x00	; 0
     3cc:	80 81       	ld	r24, Z
     3ce:	88 23       	and	r24, r24
     3d0:	79 f4       	brne	.+30     	; 0x3f0 <__vector_15+0x54>
	{
		PORT_RPWM_B &= ~(1<<PIN_RPWM_B);
     3d2:	a2 e0       	ldi	r26, 0x02	; 2
     3d4:	b1 e0       	ldi	r27, 0x01	; 1
     3d6:	e2 e0       	ldi	r30, 0x02	; 2
     3d8:	f1 e0       	ldi	r31, 0x01	; 1
     3da:	80 81       	ld	r24, Z
     3dc:	8f 7b       	andi	r24, 0xBF	; 191
     3de:	8c 93       	st	X, r24
		PORT_LPWM_B &= ~(1<<PIN_LPWM_B);
     3e0:	a5 e2       	ldi	r26, 0x25	; 37
     3e2:	b0 e0       	ldi	r27, 0x00	; 0
     3e4:	e5 e2       	ldi	r30, 0x25	; 37
     3e6:	f0 e0       	ldi	r31, 0x00	; 0
     3e8:	80 81       	ld	r24, Z
     3ea:	8f 7e       	andi	r24, 0xEF	; 239
     3ec:	8c 93       	st	X, r24
     3ee:	27 c0       	rjmp	.+78     	; 0x43e <__vector_15+0xa2>
	}
	else if (OCR2A != 0)
     3f0:	e3 eb       	ldi	r30, 0xB3	; 179
     3f2:	f0 e0       	ldi	r31, 0x00	; 0
     3f4:	80 81       	ld	r24, Z
     3f6:	88 23       	and	r24, r24
     3f8:	79 f0       	breq	.+30     	; 0x418 <__vector_15+0x7c>
	{
		PORT_LPWM_B &= ~(1<<PIN_LPWM_B);
     3fa:	a5 e2       	ldi	r26, 0x25	; 37
     3fc:	b0 e0       	ldi	r27, 0x00	; 0
     3fe:	e5 e2       	ldi	r30, 0x25	; 37
     400:	f0 e0       	ldi	r31, 0x00	; 0
     402:	80 81       	ld	r24, Z
     404:	8f 7e       	andi	r24, 0xEF	; 239
     406:	8c 93       	st	X, r24
		PORT_RPWM_B |= (1<<PIN_RPWM_B);
     408:	a2 e0       	ldi	r26, 0x02	; 2
     40a:	b1 e0       	ldi	r27, 0x01	; 1
     40c:	e2 e0       	ldi	r30, 0x02	; 2
     40e:	f1 e0       	ldi	r31, 0x01	; 1
     410:	80 81       	ld	r24, Z
     412:	80 64       	ori	r24, 0x40	; 64
     414:	8c 93       	st	X, r24
     416:	13 c0       	rjmp	.+38     	; 0x43e <__vector_15+0xa2>
	}
	else if (OCR2B != 0)
     418:	e4 eb       	ldi	r30, 0xB4	; 180
     41a:	f0 e0       	ldi	r31, 0x00	; 0
     41c:	80 81       	ld	r24, Z
     41e:	88 23       	and	r24, r24
     420:	71 f0       	breq	.+28     	; 0x43e <__vector_15+0xa2>
	{
		PORT_RPWM_B &= ~(1<<PIN_RPWM_B);
     422:	a2 e0       	ldi	r26, 0x02	; 2
     424:	b1 e0       	ldi	r27, 0x01	; 1
     426:	e2 e0       	ldi	r30, 0x02	; 2
     428:	f1 e0       	ldi	r31, 0x01	; 1
     42a:	80 81       	ld	r24, Z
     42c:	8f 7b       	andi	r24, 0xBF	; 191
     42e:	8c 93       	st	X, r24
		PORT_LPWM_B |= (1<<PIN_LPWM_B);
     430:	a5 e2       	ldi	r26, 0x25	; 37
     432:	b0 e0       	ldi	r27, 0x00	; 0
     434:	e5 e2       	ldi	r30, 0x25	; 37
     436:	f0 e0       	ldi	r31, 0x00	; 0
     438:	80 81       	ld	r24, Z
     43a:	80 61       	ori	r24, 0x10	; 16
     43c:	8c 93       	st	X, r24
	}
}
     43e:	cf 91       	pop	r28
     440:	df 91       	pop	r29
     442:	ff 91       	pop	r31
     444:	ef 91       	pop	r30
     446:	bf 91       	pop	r27
     448:	af 91       	pop	r26
     44a:	8f 91       	pop	r24
     44c:	0f 90       	pop	r0
     44e:	00 92 5b 00 	sts	0x005B, r0
     452:	0f 90       	pop	r0
     454:	0f be       	out	0x3f, r0	; 63
     456:	0f 90       	pop	r0
     458:	1f 90       	pop	r1
     45a:	18 95       	reti

0000045c <__vector_13>:

ISR(TIMER2_COMPA_vect)
{
     45c:	1f 92       	push	r1
     45e:	0f 92       	push	r0
     460:	0f b6       	in	r0, 0x3f	; 63
     462:	0f 92       	push	r0
     464:	00 90 5b 00 	lds	r0, 0x005B
     468:	0f 92       	push	r0
     46a:	11 24       	eor	r1, r1
     46c:	8f 93       	push	r24
     46e:	af 93       	push	r26
     470:	bf 93       	push	r27
     472:	ef 93       	push	r30
     474:	ff 93       	push	r31
     476:	df 93       	push	r29
     478:	cf 93       	push	r28
     47a:	cd b7       	in	r28, 0x3d	; 61
     47c:	de b7       	in	r29, 0x3e	; 62
	if (OCR2A != 255)
     47e:	e3 eb       	ldi	r30, 0xB3	; 179
     480:	f0 e0       	ldi	r31, 0x00	; 0
     482:	80 81       	ld	r24, Z
     484:	8f 3f       	cpi	r24, 0xFF	; 255
     486:	39 f0       	breq	.+14     	; 0x496 <__vector_13+0x3a>
	{
		PORT_RPWM_B &= ~(1<<PIN_RPWM_B);
     488:	a2 e0       	ldi	r26, 0x02	; 2
     48a:	b1 e0       	ldi	r27, 0x01	; 1
     48c:	e2 e0       	ldi	r30, 0x02	; 2
     48e:	f1 e0       	ldi	r31, 0x01	; 1
     490:	80 81       	ld	r24, Z
     492:	8f 7b       	andi	r24, 0xBF	; 191
     494:	8c 93       	st	X, r24
	}
}
     496:	cf 91       	pop	r28
     498:	df 91       	pop	r29
     49a:	ff 91       	pop	r31
     49c:	ef 91       	pop	r30
     49e:	bf 91       	pop	r27
     4a0:	af 91       	pop	r26
     4a2:	8f 91       	pop	r24
     4a4:	0f 90       	pop	r0
     4a6:	00 92 5b 00 	sts	0x005B, r0
     4aa:	0f 90       	pop	r0
     4ac:	0f be       	out	0x3f, r0	; 63
     4ae:	0f 90       	pop	r0
     4b0:	1f 90       	pop	r1
     4b2:	18 95       	reti

000004b4 <__vector_14>:

ISR(TIMER2_COMPB_vect)
{
     4b4:	1f 92       	push	r1
     4b6:	0f 92       	push	r0
     4b8:	0f b6       	in	r0, 0x3f	; 63
     4ba:	0f 92       	push	r0
     4bc:	00 90 5b 00 	lds	r0, 0x005B
     4c0:	0f 92       	push	r0
     4c2:	11 24       	eor	r1, r1
     4c4:	8f 93       	push	r24
     4c6:	af 93       	push	r26
     4c8:	bf 93       	push	r27
     4ca:	ef 93       	push	r30
     4cc:	ff 93       	push	r31
     4ce:	df 93       	push	r29
     4d0:	cf 93       	push	r28
     4d2:	cd b7       	in	r28, 0x3d	; 61
     4d4:	de b7       	in	r29, 0x3e	; 62
	if (OCR2B != 255)
     4d6:	e4 eb       	ldi	r30, 0xB4	; 180
     4d8:	f0 e0       	ldi	r31, 0x00	; 0
     4da:	80 81       	ld	r24, Z
     4dc:	8f 3f       	cpi	r24, 0xFF	; 255
     4de:	39 f0       	breq	.+14     	; 0x4ee <__vector_14+0x3a>
	{
		PORT_LPWM_B &= ~(1<<PIN_LPWM_B);
     4e0:	a5 e2       	ldi	r26, 0x25	; 37
     4e2:	b0 e0       	ldi	r27, 0x00	; 0
     4e4:	e5 e2       	ldi	r30, 0x25	; 37
     4e6:	f0 e0       	ldi	r31, 0x00	; 0
     4e8:	80 81       	ld	r24, Z
     4ea:	8f 7e       	andi	r24, 0xEF	; 239
     4ec:	8c 93       	st	X, r24
	}
}
     4ee:	cf 91       	pop	r28
     4f0:	df 91       	pop	r29
     4f2:	ff 91       	pop	r31
     4f4:	ef 91       	pop	r30
     4f6:	bf 91       	pop	r27
     4f8:	af 91       	pop	r26
     4fa:	8f 91       	pop	r24
     4fc:	0f 90       	pop	r0
     4fe:	00 92 5b 00 	sts	0x005B, r0
     502:	0f 90       	pop	r0
     504:	0f be       	out	0x3f, r0	; 63
     506:	0f 90       	pop	r0
     508:	1f 90       	pop	r1
     50a:	18 95       	reti

0000050c <init_h_bridge_b>:

void init_h_bridge_b(void)
{
     50c:	df 93       	push	r29
     50e:	cf 93       	push	r28
     510:	cd b7       	in	r28, 0x3d	; 61
     512:	de b7       	in	r29, 0x3e	; 62
	// Config pins as output
	DDR_RPWM_B |= (1<<PIN_RPWM_B);
     514:	a1 e2       	ldi	r26, 0x21	; 33
     516:	b0 e0       	ldi	r27, 0x00	; 0
     518:	e1 e2       	ldi	r30, 0x21	; 33
     51a:	f0 e0       	ldi	r31, 0x00	; 0
     51c:	80 81       	ld	r24, Z
     51e:	80 64       	ori	r24, 0x40	; 64
     520:	8c 93       	st	X, r24
	DDR_LPWM_B |= (1<<PIN_LPWM_B);
     522:	a4 e2       	ldi	r26, 0x24	; 36
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	e4 e2       	ldi	r30, 0x24	; 36
     528:	f0 e0       	ldi	r31, 0x00	; 0
     52a:	80 81       	ld	r24, Z
     52c:	80 61       	ori	r24, 0x10	; 16
     52e:	8c 93       	st	X, r24

	// Output low
	PORT_RPWM_B &= ~(1<<PIN_RPWM_B);
     530:	a2 e0       	ldi	r26, 0x02	; 2
     532:	b1 e0       	ldi	r27, 0x01	; 1
     534:	e2 e0       	ldi	r30, 0x02	; 2
     536:	f1 e0       	ldi	r31, 0x01	; 1
     538:	80 81       	ld	r24, Z
     53a:	8f 7b       	andi	r24, 0xBF	; 191
     53c:	8c 93       	st	X, r24
	PORT_LPWM_B &= ~(1<<PIN_LPWM_B);
     53e:	a5 e2       	ldi	r26, 0x25	; 37
     540:	b0 e0       	ldi	r27, 0x00	; 0
     542:	e5 e2       	ldi	r30, 0x25	; 37
     544:	f0 e0       	ldi	r31, 0x00	; 0
     546:	80 81       	ld	r24, Z
     548:	8f 7e       	andi	r24, 0xEF	; 239
     54a:	8c 93       	st	X, r24

	// Use mode 0, clkdiv = 64
	TCCR2A = 0;
     54c:	e0 eb       	ldi	r30, 0xB0	; 176
     54e:	f0 e0       	ldi	r31, 0x00	; 0
     550:	10 82       	st	Z, r1
	TCCR2B = (0<<CS22) | (1<<CS21) | (1<<CS20);
     552:	e1 eb       	ldi	r30, 0xB1	; 177
     554:	f0 e0       	ldi	r31, 0x00	; 0
     556:	83 e0       	ldi	r24, 0x03	; 3
     558:	80 83       	st	Z, r24

	// Disable PWM output
	OCR2A = 0;
     55a:	e3 eb       	ldi	r30, 0xB3	; 179
     55c:	f0 e0       	ldi	r31, 0x00	; 0
     55e:	10 82       	st	Z, r1
	OCR2B = 0;
     560:	e4 eb       	ldi	r30, 0xB4	; 180
     562:	f0 e0       	ldi	r31, 0x00	; 0
     564:	10 82       	st	Z, r1

	// Interrupts on OCA, OCB and OVF
	TIMSK2 = (1<<OCIE2B) | (1<<OCIE2A) | (1<<TOIE2);
     566:	e0 e7       	ldi	r30, 0x70	; 112
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	87 e0       	ldi	r24, 0x07	; 7
     56c:	80 83       	st	Z, r24

	sei();
     56e:	78 94       	sei
}
     570:	cf 91       	pop	r28
     572:	df 91       	pop	r29
     574:	08 95       	ret

00000576 <h_bridge_set_percentage_b>:

void h_bridge_set_percentage_b(signed char percentage_b)
{
     576:	df 93       	push	r29
     578:	cf 93       	push	r28
     57a:	0f 92       	push	r0
     57c:	cd b7       	in	r28, 0x3d	; 61
     57e:	de b7       	in	r29, 0x3e	; 62
     580:	89 83       	std	Y+1, r24	; 0x01
	if (percentage_b >= -100 && percentage_b <= 100)
     582:	89 81       	ldd	r24, Y+1	; 0x01
     584:	8c 39       	cpi	r24, 0x9C	; 156
     586:	0c f4       	brge	.+2      	; 0x58a <h_bridge_set_percentage_b+0x14>
     588:	46 c0       	rjmp	.+140    	; 0x616 <h_bridge_set_percentage_b+0xa0>
     58a:	89 81       	ldd	r24, Y+1	; 0x01
     58c:	85 36       	cpi	r24, 0x65	; 101
     58e:	0c f0       	brlt	.+2      	; 0x592 <h_bridge_set_percentage_b+0x1c>
     590:	42 c0       	rjmp	.+132    	; 0x616 <h_bridge_set_percentage_b+0xa0>
	{
		if (percentage_b >= 0)
     592:	89 81       	ldd	r24, Y+1	; 0x01
     594:	88 23       	and	r24, r24
     596:	04 f1       	brlt	.+64     	; 0x5d8 <h_bridge_set_percentage_b+0x62>
		{
			// Disable LPWM, calculate RPWM
			OCR2B = 0;
     598:	e4 eb       	ldi	r30, 0xB4	; 180
     59a:	f0 e0       	ldi	r31, 0x00	; 0
     59c:	10 82       	st	Z, r1
			OCR2A = (255*percentage_b)/100;
     59e:	e3 eb       	ldi	r30, 0xB3	; 179
     5a0:	f0 e0       	ldi	r31, 0x00	; 0
     5a2:	89 81       	ldd	r24, Y+1	; 0x01
     5a4:	48 2f       	mov	r20, r24
     5a6:	55 27       	eor	r21, r21
     5a8:	47 fd       	sbrc	r20, 7
     5aa:	50 95       	com	r21
     5ac:	ca 01       	movw	r24, r20
     5ae:	9c 01       	movw	r18, r24
     5b0:	22 0f       	add	r18, r18
     5b2:	33 1f       	adc	r19, r19
     5b4:	c9 01       	movw	r24, r18
     5b6:	96 95       	lsr	r25
     5b8:	98 2f       	mov	r25, r24
     5ba:	88 27       	eor	r24, r24
     5bc:	97 95       	ror	r25
     5be:	87 95       	ror	r24
     5c0:	82 1b       	sub	r24, r18
     5c2:	93 0b       	sbc	r25, r19
     5c4:	84 0f       	add	r24, r20
     5c6:	95 1f       	adc	r25, r21
     5c8:	24 e6       	ldi	r18, 0x64	; 100
     5ca:	30 e0       	ldi	r19, 0x00	; 0
     5cc:	b9 01       	movw	r22, r18
     5ce:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__divmodhi4>
     5d2:	cb 01       	movw	r24, r22
     5d4:	80 83       	st	Z, r24
     5d6:	1f c0       	rjmp	.+62     	; 0x616 <h_bridge_set_percentage_b+0xa0>
		}
		else // percentage < 0
		{
			// Disable RPWM, calculate LPWM
			OCR2A = 0;
     5d8:	e3 eb       	ldi	r30, 0xB3	; 179
     5da:	f0 e0       	ldi	r31, 0x00	; 0
     5dc:	10 82       	st	Z, r1
			OCR2B = (255*percentage_b)/-100;
     5de:	e4 eb       	ldi	r30, 0xB4	; 180
     5e0:	f0 e0       	ldi	r31, 0x00	; 0
     5e2:	89 81       	ldd	r24, Y+1	; 0x01
     5e4:	48 2f       	mov	r20, r24
     5e6:	55 27       	eor	r21, r21
     5e8:	47 fd       	sbrc	r20, 7
     5ea:	50 95       	com	r21
     5ec:	ca 01       	movw	r24, r20
     5ee:	9c 01       	movw	r18, r24
     5f0:	22 0f       	add	r18, r18
     5f2:	33 1f       	adc	r19, r19
     5f4:	c9 01       	movw	r24, r18
     5f6:	96 95       	lsr	r25
     5f8:	98 2f       	mov	r25, r24
     5fa:	88 27       	eor	r24, r24
     5fc:	97 95       	ror	r25
     5fe:	87 95       	ror	r24
     600:	82 1b       	sub	r24, r18
     602:	93 0b       	sbc	r25, r19
     604:	84 0f       	add	r24, r20
     606:	95 1f       	adc	r25, r21
     608:	2c e9       	ldi	r18, 0x9C	; 156
     60a:	3f ef       	ldi	r19, 0xFF	; 255
     60c:	b9 01       	movw	r22, r18
     60e:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__divmodhi4>
     612:	cb 01       	movw	r24, r22
     614:	80 83       	st	Z, r24
		}
	}
}
     616:	0f 90       	pop	r0
     618:	cf 91       	pop	r28
     61a:	df 91       	pop	r29
     61c:	08 95       	ret

0000061e <main>:
#include "h_bridge_a.h"
#include "h_bridge_b.h"
#include <util/delay.h>

int main(void)
{
     61e:	df 93       	push	r29
     620:	cf 93       	push	r28
     622:	cd b7       	in	r28, 0x3d	; 61
     624:	de b7       	in	r29, 0x3e	; 62
     626:	e8 97       	sbiw	r28, 0x38	; 56
     628:	0f b6       	in	r0, 0x3f	; 63
     62a:	f8 94       	cli
     62c:	de bf       	out	0x3e, r29	; 62
     62e:	0f be       	out	0x3f, r0	; 63
     630:	cd bf       	out	0x3d, r28	; 61
    init_h_bridge_a();
     632:	0e 94 45 01 	call	0x28a	; 0x28a <init_h_bridge_a>
    init_h_bridge_b();
     636:	0e 94 86 02 	call	0x50c	; 0x50c <init_h_bridge_b>
while(1){
        h_bridge_set_percentage_a(80);
     63a:	80 e5       	ldi	r24, 0x50	; 80
     63c:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <h_bridge_set_percentage_a>
        h_bridge_set_percentage_b(80);
     640:	80 e5       	ldi	r24, 0x50	; 80
     642:	0e 94 bb 02 	call	0x576	; 0x576 <h_bridge_set_percentage_b>
     646:	80 e0       	ldi	r24, 0x00	; 0
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	aa e7       	ldi	r26, 0x7A	; 122
     64c:	b4 e4       	ldi	r27, 0x44	; 68
     64e:	8d ab       	std	Y+53, r24	; 0x35
     650:	9e ab       	std	Y+54, r25	; 0x36
     652:	af ab       	std	Y+55, r26	; 0x37
     654:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     656:	6d a9       	ldd	r22, Y+53	; 0x35
     658:	7e a9       	ldd	r23, Y+54	; 0x36
     65a:	8f a9       	ldd	r24, Y+55	; 0x37
     65c:	98 ad       	ldd	r25, Y+56	; 0x38
     65e:	20 e0       	ldi	r18, 0x00	; 0
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	4a e7       	ldi	r20, 0x7A	; 122
     664:	55 e4       	ldi	r21, 0x45	; 69
     666:	0e 94 d4 06 	call	0xda8	; 0xda8 <__mulsf3>
     66a:	dc 01       	movw	r26, r24
     66c:	cb 01       	movw	r24, r22
     66e:	89 ab       	std	Y+49, r24	; 0x31
     670:	9a ab       	std	Y+50, r25	; 0x32
     672:	ab ab       	std	Y+51, r26	; 0x33
     674:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     676:	69 a9       	ldd	r22, Y+49	; 0x31
     678:	7a a9       	ldd	r23, Y+50	; 0x32
     67a:	8b a9       	ldd	r24, Y+51	; 0x33
     67c:	9c a9       	ldd	r25, Y+52	; 0x34
     67e:	20 e0       	ldi	r18, 0x00	; 0
     680:	30 e0       	ldi	r19, 0x00	; 0
     682:	40 e8       	ldi	r20, 0x80	; 128
     684:	5f e3       	ldi	r21, 0x3F	; 63
     686:	0e 94 2e 08 	call	0x105c	; 0x105c <__ltsf2>
     68a:	88 23       	and	r24, r24
     68c:	2c f4       	brge	.+10     	; 0x698 <main+0x7a>
		__ticks = 1;
     68e:	81 e0       	ldi	r24, 0x01	; 1
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	98 ab       	std	Y+48, r25	; 0x30
     694:	8f a7       	std	Y+47, r24	; 0x2f
     696:	3f c0       	rjmp	.+126    	; 0x716 <main+0xf8>
	else if (__tmp > 65535)
     698:	69 a9       	ldd	r22, Y+49	; 0x31
     69a:	7a a9       	ldd	r23, Y+50	; 0x32
     69c:	8b a9       	ldd	r24, Y+51	; 0x33
     69e:	9c a9       	ldd	r25, Y+52	; 0x34
     6a0:	20 e0       	ldi	r18, 0x00	; 0
     6a2:	3f ef       	ldi	r19, 0xFF	; 255
     6a4:	4f e7       	ldi	r20, 0x7F	; 127
     6a6:	57 e4       	ldi	r21, 0x47	; 71
     6a8:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__gtsf2>
     6ac:	18 16       	cp	r1, r24
     6ae:	4c f5       	brge	.+82     	; 0x702 <main+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6b0:	6d a9       	ldd	r22, Y+53	; 0x35
     6b2:	7e a9       	ldd	r23, Y+54	; 0x36
     6b4:	8f a9       	ldd	r24, Y+55	; 0x37
     6b6:	98 ad       	ldd	r25, Y+56	; 0x38
     6b8:	20 e0       	ldi	r18, 0x00	; 0
     6ba:	30 e0       	ldi	r19, 0x00	; 0
     6bc:	40 e2       	ldi	r20, 0x20	; 32
     6be:	51 e4       	ldi	r21, 0x41	; 65
     6c0:	0e 94 d4 06 	call	0xda8	; 0xda8 <__mulsf3>
     6c4:	dc 01       	movw	r26, r24
     6c6:	cb 01       	movw	r24, r22
     6c8:	bc 01       	movw	r22, r24
     6ca:	cd 01       	movw	r24, r26
     6cc:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixunssfsi>
     6d0:	dc 01       	movw	r26, r24
     6d2:	cb 01       	movw	r24, r22
     6d4:	98 ab       	std	Y+48, r25	; 0x30
     6d6:	8f a7       	std	Y+47, r24	; 0x2f
     6d8:	0f c0       	rjmp	.+30     	; 0x6f8 <main+0xda>
     6da:	80 e9       	ldi	r24, 0x90	; 144
     6dc:	91 e0       	ldi	r25, 0x01	; 1
     6de:	9e a7       	std	Y+46, r25	; 0x2e
     6e0:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     6e2:	8d a5       	ldd	r24, Y+45	; 0x2d
     6e4:	9e a5       	ldd	r25, Y+46	; 0x2e
     6e6:	01 97       	sbiw	r24, 0x01	; 1
     6e8:	f1 f7       	brne	.-4      	; 0x6e6 <main+0xc8>
     6ea:	9e a7       	std	Y+46, r25	; 0x2e
     6ec:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6ee:	8f a5       	ldd	r24, Y+47	; 0x2f
     6f0:	98 a9       	ldd	r25, Y+48	; 0x30
     6f2:	01 97       	sbiw	r24, 0x01	; 1
     6f4:	98 ab       	std	Y+48, r25	; 0x30
     6f6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6f8:	8f a5       	ldd	r24, Y+47	; 0x2f
     6fa:	98 a9       	ldd	r25, Y+48	; 0x30
     6fc:	00 97       	sbiw	r24, 0x00	; 0
     6fe:	69 f7       	brne	.-38     	; 0x6da <main+0xbc>
     700:	14 c0       	rjmp	.+40     	; 0x72a <main+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     702:	69 a9       	ldd	r22, Y+49	; 0x31
     704:	7a a9       	ldd	r23, Y+50	; 0x32
     706:	8b a9       	ldd	r24, Y+51	; 0x33
     708:	9c a9       	ldd	r25, Y+52	; 0x34
     70a:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixunssfsi>
     70e:	dc 01       	movw	r26, r24
     710:	cb 01       	movw	r24, r22
     712:	98 ab       	std	Y+48, r25	; 0x30
     714:	8f a7       	std	Y+47, r24	; 0x2f
     716:	8f a5       	ldd	r24, Y+47	; 0x2f
     718:	98 a9       	ldd	r25, Y+48	; 0x30
     71a:	9c a7       	std	Y+44, r25	; 0x2c
     71c:	8b a7       	std	Y+43, r24	; 0x2b
     71e:	8b a5       	ldd	r24, Y+43	; 0x2b
     720:	9c a5       	ldd	r25, Y+44	; 0x2c
     722:	01 97       	sbiw	r24, 0x01	; 1
     724:	f1 f7       	brne	.-4      	; 0x722 <main+0x104>
     726:	9c a7       	std	Y+44, r25	; 0x2c
     728:	8b a7       	std	Y+43, r24	; 0x2b
        _delay_ms(1000);
        h_bridge_set_percentage_a(0);
     72a:	80 e0       	ldi	r24, 0x00	; 0
     72c:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <h_bridge_set_percentage_a>
        h_bridge_set_percentage_b(0);
     730:	80 e0       	ldi	r24, 0x00	; 0
     732:	0e 94 bb 02 	call	0x576	; 0x576 <h_bridge_set_percentage_b>
     736:	80 e0       	ldi	r24, 0x00	; 0
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	aa e7       	ldi	r26, 0x7A	; 122
     73c:	b4 e4       	ldi	r27, 0x44	; 68
     73e:	8f a3       	std	Y+39, r24	; 0x27
     740:	98 a7       	std	Y+40, r25	; 0x28
     742:	a9 a7       	std	Y+41, r26	; 0x29
     744:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     746:	6f a1       	ldd	r22, Y+39	; 0x27
     748:	78 a5       	ldd	r23, Y+40	; 0x28
     74a:	89 a5       	ldd	r24, Y+41	; 0x29
     74c:	9a a5       	ldd	r25, Y+42	; 0x2a
     74e:	20 e0       	ldi	r18, 0x00	; 0
     750:	30 e0       	ldi	r19, 0x00	; 0
     752:	4a e7       	ldi	r20, 0x7A	; 122
     754:	55 e4       	ldi	r21, 0x45	; 69
     756:	0e 94 d4 06 	call	0xda8	; 0xda8 <__mulsf3>
     75a:	dc 01       	movw	r26, r24
     75c:	cb 01       	movw	r24, r22
     75e:	8b a3       	std	Y+35, r24	; 0x23
     760:	9c a3       	std	Y+36, r25	; 0x24
     762:	ad a3       	std	Y+37, r26	; 0x25
     764:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     766:	6b a1       	ldd	r22, Y+35	; 0x23
     768:	7c a1       	ldd	r23, Y+36	; 0x24
     76a:	8d a1       	ldd	r24, Y+37	; 0x25
     76c:	9e a1       	ldd	r25, Y+38	; 0x26
     76e:	20 e0       	ldi	r18, 0x00	; 0
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	40 e8       	ldi	r20, 0x80	; 128
     774:	5f e3       	ldi	r21, 0x3F	; 63
     776:	0e 94 2e 08 	call	0x105c	; 0x105c <__ltsf2>
     77a:	88 23       	and	r24, r24
     77c:	2c f4       	brge	.+10     	; 0x788 <main+0x16a>
		__ticks = 1;
     77e:	81 e0       	ldi	r24, 0x01	; 1
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	9a a3       	std	Y+34, r25	; 0x22
     784:	89 a3       	std	Y+33, r24	; 0x21
     786:	3f c0       	rjmp	.+126    	; 0x806 <main+0x1e8>
	else if (__tmp > 65535)
     788:	6b a1       	ldd	r22, Y+35	; 0x23
     78a:	7c a1       	ldd	r23, Y+36	; 0x24
     78c:	8d a1       	ldd	r24, Y+37	; 0x25
     78e:	9e a1       	ldd	r25, Y+38	; 0x26
     790:	20 e0       	ldi	r18, 0x00	; 0
     792:	3f ef       	ldi	r19, 0xFF	; 255
     794:	4f e7       	ldi	r20, 0x7F	; 127
     796:	57 e4       	ldi	r21, 0x47	; 71
     798:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__gtsf2>
     79c:	18 16       	cp	r1, r24
     79e:	4c f5       	brge	.+82     	; 0x7f2 <main+0x1d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7a0:	6f a1       	ldd	r22, Y+39	; 0x27
     7a2:	78 a5       	ldd	r23, Y+40	; 0x28
     7a4:	89 a5       	ldd	r24, Y+41	; 0x29
     7a6:	9a a5       	ldd	r25, Y+42	; 0x2a
     7a8:	20 e0       	ldi	r18, 0x00	; 0
     7aa:	30 e0       	ldi	r19, 0x00	; 0
     7ac:	40 e2       	ldi	r20, 0x20	; 32
     7ae:	51 e4       	ldi	r21, 0x41	; 65
     7b0:	0e 94 d4 06 	call	0xda8	; 0xda8 <__mulsf3>
     7b4:	dc 01       	movw	r26, r24
     7b6:	cb 01       	movw	r24, r22
     7b8:	bc 01       	movw	r22, r24
     7ba:	cd 01       	movw	r24, r26
     7bc:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixunssfsi>
     7c0:	dc 01       	movw	r26, r24
     7c2:	cb 01       	movw	r24, r22
     7c4:	9a a3       	std	Y+34, r25	; 0x22
     7c6:	89 a3       	std	Y+33, r24	; 0x21
     7c8:	0f c0       	rjmp	.+30     	; 0x7e8 <main+0x1ca>
     7ca:	80 e9       	ldi	r24, 0x90	; 144
     7cc:	91 e0       	ldi	r25, 0x01	; 1
     7ce:	98 a3       	std	Y+32, r25	; 0x20
     7d0:	8f 8f       	std	Y+31, r24	; 0x1f
     7d2:	8f 8d       	ldd	r24, Y+31	; 0x1f
     7d4:	98 a1       	ldd	r25, Y+32	; 0x20
     7d6:	01 97       	sbiw	r24, 0x01	; 1
     7d8:	f1 f7       	brne	.-4      	; 0x7d6 <main+0x1b8>
     7da:	98 a3       	std	Y+32, r25	; 0x20
     7dc:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7de:	89 a1       	ldd	r24, Y+33	; 0x21
     7e0:	9a a1       	ldd	r25, Y+34	; 0x22
     7e2:	01 97       	sbiw	r24, 0x01	; 1
     7e4:	9a a3       	std	Y+34, r25	; 0x22
     7e6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7e8:	89 a1       	ldd	r24, Y+33	; 0x21
     7ea:	9a a1       	ldd	r25, Y+34	; 0x22
     7ec:	00 97       	sbiw	r24, 0x00	; 0
     7ee:	69 f7       	brne	.-38     	; 0x7ca <main+0x1ac>
     7f0:	14 c0       	rjmp	.+40     	; 0x81a <main+0x1fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7f2:	6b a1       	ldd	r22, Y+35	; 0x23
     7f4:	7c a1       	ldd	r23, Y+36	; 0x24
     7f6:	8d a1       	ldd	r24, Y+37	; 0x25
     7f8:	9e a1       	ldd	r25, Y+38	; 0x26
     7fa:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixunssfsi>
     7fe:	dc 01       	movw	r26, r24
     800:	cb 01       	movw	r24, r22
     802:	9a a3       	std	Y+34, r25	; 0x22
     804:	89 a3       	std	Y+33, r24	; 0x21
     806:	89 a1       	ldd	r24, Y+33	; 0x21
     808:	9a a1       	ldd	r25, Y+34	; 0x22
     80a:	9e 8f       	std	Y+30, r25	; 0x1e
     80c:	8d 8f       	std	Y+29, r24	; 0x1d
     80e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     810:	9e 8d       	ldd	r25, Y+30	; 0x1e
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	f1 f7       	brne	.-4      	; 0x812 <main+0x1f4>
     816:	9e 8f       	std	Y+30, r25	; 0x1e
     818:	8d 8f       	std	Y+29, r24	; 0x1d
        _delay_ms(1000);
        h_bridge_set_percentage_a(0);
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <h_bridge_set_percentage_a>
        h_bridge_set_percentage_b(100);
     820:	84 e6       	ldi	r24, 0x64	; 100
     822:	0e 94 bb 02 	call	0x576	; 0x576 <h_bridge_set_percentage_b>
     826:	80 e0       	ldi	r24, 0x00	; 0
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	aa ef       	ldi	r26, 0xFA	; 250
     82c:	b3 e4       	ldi	r27, 0x43	; 67
     82e:	89 8f       	std	Y+25, r24	; 0x19
     830:	9a 8f       	std	Y+26, r25	; 0x1a
     832:	ab 8f       	std	Y+27, r26	; 0x1b
     834:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     836:	69 8d       	ldd	r22, Y+25	; 0x19
     838:	7a 8d       	ldd	r23, Y+26	; 0x1a
     83a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     83c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     83e:	20 e0       	ldi	r18, 0x00	; 0
     840:	30 e0       	ldi	r19, 0x00	; 0
     842:	4a e7       	ldi	r20, 0x7A	; 122
     844:	55 e4       	ldi	r21, 0x45	; 69
     846:	0e 94 d4 06 	call	0xda8	; 0xda8 <__mulsf3>
     84a:	dc 01       	movw	r26, r24
     84c:	cb 01       	movw	r24, r22
     84e:	8d 8b       	std	Y+21, r24	; 0x15
     850:	9e 8b       	std	Y+22, r25	; 0x16
     852:	af 8b       	std	Y+23, r26	; 0x17
     854:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     856:	6d 89       	ldd	r22, Y+21	; 0x15
     858:	7e 89       	ldd	r23, Y+22	; 0x16
     85a:	8f 89       	ldd	r24, Y+23	; 0x17
     85c:	98 8d       	ldd	r25, Y+24	; 0x18
     85e:	20 e0       	ldi	r18, 0x00	; 0
     860:	30 e0       	ldi	r19, 0x00	; 0
     862:	40 e8       	ldi	r20, 0x80	; 128
     864:	5f e3       	ldi	r21, 0x3F	; 63
     866:	0e 94 2e 08 	call	0x105c	; 0x105c <__ltsf2>
     86a:	88 23       	and	r24, r24
     86c:	2c f4       	brge	.+10     	; 0x878 <main+0x25a>
		__ticks = 1;
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	9c 8b       	std	Y+20, r25	; 0x14
     874:	8b 8b       	std	Y+19, r24	; 0x13
     876:	3f c0       	rjmp	.+126    	; 0x8f6 <main+0x2d8>
	else if (__tmp > 65535)
     878:	6d 89       	ldd	r22, Y+21	; 0x15
     87a:	7e 89       	ldd	r23, Y+22	; 0x16
     87c:	8f 89       	ldd	r24, Y+23	; 0x17
     87e:	98 8d       	ldd	r25, Y+24	; 0x18
     880:	20 e0       	ldi	r18, 0x00	; 0
     882:	3f ef       	ldi	r19, 0xFF	; 255
     884:	4f e7       	ldi	r20, 0x7F	; 127
     886:	57 e4       	ldi	r21, 0x47	; 71
     888:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__gtsf2>
     88c:	18 16       	cp	r1, r24
     88e:	4c f5       	brge	.+82     	; 0x8e2 <main+0x2c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     890:	69 8d       	ldd	r22, Y+25	; 0x19
     892:	7a 8d       	ldd	r23, Y+26	; 0x1a
     894:	8b 8d       	ldd	r24, Y+27	; 0x1b
     896:	9c 8d       	ldd	r25, Y+28	; 0x1c
     898:	20 e0       	ldi	r18, 0x00	; 0
     89a:	30 e0       	ldi	r19, 0x00	; 0
     89c:	40 e2       	ldi	r20, 0x20	; 32
     89e:	51 e4       	ldi	r21, 0x41	; 65
     8a0:	0e 94 d4 06 	call	0xda8	; 0xda8 <__mulsf3>
     8a4:	dc 01       	movw	r26, r24
     8a6:	cb 01       	movw	r24, r22
     8a8:	bc 01       	movw	r22, r24
     8aa:	cd 01       	movw	r24, r26
     8ac:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixunssfsi>
     8b0:	dc 01       	movw	r26, r24
     8b2:	cb 01       	movw	r24, r22
     8b4:	9c 8b       	std	Y+20, r25	; 0x14
     8b6:	8b 8b       	std	Y+19, r24	; 0x13
     8b8:	0f c0       	rjmp	.+30     	; 0x8d8 <main+0x2ba>
     8ba:	80 e9       	ldi	r24, 0x90	; 144
     8bc:	91 e0       	ldi	r25, 0x01	; 1
     8be:	9a 8b       	std	Y+18, r25	; 0x12
     8c0:	89 8b       	std	Y+17, r24	; 0x11
     8c2:	89 89       	ldd	r24, Y+17	; 0x11
     8c4:	9a 89       	ldd	r25, Y+18	; 0x12
     8c6:	01 97       	sbiw	r24, 0x01	; 1
     8c8:	f1 f7       	brne	.-4      	; 0x8c6 <main+0x2a8>
     8ca:	9a 8b       	std	Y+18, r25	; 0x12
     8cc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8ce:	8b 89       	ldd	r24, Y+19	; 0x13
     8d0:	9c 89       	ldd	r25, Y+20	; 0x14
     8d2:	01 97       	sbiw	r24, 0x01	; 1
     8d4:	9c 8b       	std	Y+20, r25	; 0x14
     8d6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8d8:	8b 89       	ldd	r24, Y+19	; 0x13
     8da:	9c 89       	ldd	r25, Y+20	; 0x14
     8dc:	00 97       	sbiw	r24, 0x00	; 0
     8de:	69 f7       	brne	.-38     	; 0x8ba <main+0x29c>
     8e0:	14 c0       	rjmp	.+40     	; 0x90a <main+0x2ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8e2:	6d 89       	ldd	r22, Y+21	; 0x15
     8e4:	7e 89       	ldd	r23, Y+22	; 0x16
     8e6:	8f 89       	ldd	r24, Y+23	; 0x17
     8e8:	98 8d       	ldd	r25, Y+24	; 0x18
     8ea:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixunssfsi>
     8ee:	dc 01       	movw	r26, r24
     8f0:	cb 01       	movw	r24, r22
     8f2:	9c 8b       	std	Y+20, r25	; 0x14
     8f4:	8b 8b       	std	Y+19, r24	; 0x13
     8f6:	8b 89       	ldd	r24, Y+19	; 0x13
     8f8:	9c 89       	ldd	r25, Y+20	; 0x14
     8fa:	98 8b       	std	Y+16, r25	; 0x10
     8fc:	8f 87       	std	Y+15, r24	; 0x0f
     8fe:	8f 85       	ldd	r24, Y+15	; 0x0f
     900:	98 89       	ldd	r25, Y+16	; 0x10
     902:	01 97       	sbiw	r24, 0x01	; 1
     904:	f1 f7       	brne	.-4      	; 0x902 <main+0x2e4>
     906:	98 8b       	std	Y+16, r25	; 0x10
     908:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(500);
        h_bridge_set_percentage_a(0);
     90a:	80 e0       	ldi	r24, 0x00	; 0
     90c:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <h_bridge_set_percentage_a>
        h_bridge_set_percentage_b(0);
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	0e 94 bb 02 	call	0x576	; 0x576 <h_bridge_set_percentage_b>
     916:	80 e0       	ldi	r24, 0x00	; 0
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	aa e7       	ldi	r26, 0x7A	; 122
     91c:	b4 e4       	ldi	r27, 0x44	; 68
     91e:	8b 87       	std	Y+11, r24	; 0x0b
     920:	9c 87       	std	Y+12, r25	; 0x0c
     922:	ad 87       	std	Y+13, r26	; 0x0d
     924:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     926:	6b 85       	ldd	r22, Y+11	; 0x0b
     928:	7c 85       	ldd	r23, Y+12	; 0x0c
     92a:	8d 85       	ldd	r24, Y+13	; 0x0d
     92c:	9e 85       	ldd	r25, Y+14	; 0x0e
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	4a e7       	ldi	r20, 0x7A	; 122
     934:	55 e4       	ldi	r21, 0x45	; 69
     936:	0e 94 d4 06 	call	0xda8	; 0xda8 <__mulsf3>
     93a:	dc 01       	movw	r26, r24
     93c:	cb 01       	movw	r24, r22
     93e:	8f 83       	std	Y+7, r24	; 0x07
     940:	98 87       	std	Y+8, r25	; 0x08
     942:	a9 87       	std	Y+9, r26	; 0x09
     944:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     946:	6f 81       	ldd	r22, Y+7	; 0x07
     948:	78 85       	ldd	r23, Y+8	; 0x08
     94a:	89 85       	ldd	r24, Y+9	; 0x09
     94c:	9a 85       	ldd	r25, Y+10	; 0x0a
     94e:	20 e0       	ldi	r18, 0x00	; 0
     950:	30 e0       	ldi	r19, 0x00	; 0
     952:	40 e8       	ldi	r20, 0x80	; 128
     954:	5f e3       	ldi	r21, 0x3F	; 63
     956:	0e 94 2e 08 	call	0x105c	; 0x105c <__ltsf2>
     95a:	88 23       	and	r24, r24
     95c:	2c f4       	brge	.+10     	; 0x968 <main+0x34a>
		__ticks = 1;
     95e:	81 e0       	ldi	r24, 0x01	; 1
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	9e 83       	std	Y+6, r25	; 0x06
     964:	8d 83       	std	Y+5, r24	; 0x05
     966:	3f c0       	rjmp	.+126    	; 0x9e6 <main+0x3c8>
	else if (__tmp > 65535)
     968:	6f 81       	ldd	r22, Y+7	; 0x07
     96a:	78 85       	ldd	r23, Y+8	; 0x08
     96c:	89 85       	ldd	r24, Y+9	; 0x09
     96e:	9a 85       	ldd	r25, Y+10	; 0x0a
     970:	20 e0       	ldi	r18, 0x00	; 0
     972:	3f ef       	ldi	r19, 0xFF	; 255
     974:	4f e7       	ldi	r20, 0x7F	; 127
     976:	57 e4       	ldi	r21, 0x47	; 71
     978:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__gtsf2>
     97c:	18 16       	cp	r1, r24
     97e:	4c f5       	brge	.+82     	; 0x9d2 <main+0x3b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     980:	6b 85       	ldd	r22, Y+11	; 0x0b
     982:	7c 85       	ldd	r23, Y+12	; 0x0c
     984:	8d 85       	ldd	r24, Y+13	; 0x0d
     986:	9e 85       	ldd	r25, Y+14	; 0x0e
     988:	20 e0       	ldi	r18, 0x00	; 0
     98a:	30 e0       	ldi	r19, 0x00	; 0
     98c:	40 e2       	ldi	r20, 0x20	; 32
     98e:	51 e4       	ldi	r21, 0x41	; 65
     990:	0e 94 d4 06 	call	0xda8	; 0xda8 <__mulsf3>
     994:	dc 01       	movw	r26, r24
     996:	cb 01       	movw	r24, r22
     998:	bc 01       	movw	r22, r24
     99a:	cd 01       	movw	r24, r26
     99c:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixunssfsi>
     9a0:	dc 01       	movw	r26, r24
     9a2:	cb 01       	movw	r24, r22
     9a4:	9e 83       	std	Y+6, r25	; 0x06
     9a6:	8d 83       	std	Y+5, r24	; 0x05
     9a8:	0f c0       	rjmp	.+30     	; 0x9c8 <main+0x3aa>
     9aa:	80 e9       	ldi	r24, 0x90	; 144
     9ac:	91 e0       	ldi	r25, 0x01	; 1
     9ae:	9c 83       	std	Y+4, r25	; 0x04
     9b0:	8b 83       	std	Y+3, r24	; 0x03
     9b2:	8b 81       	ldd	r24, Y+3	; 0x03
     9b4:	9c 81       	ldd	r25, Y+4	; 0x04
     9b6:	01 97       	sbiw	r24, 0x01	; 1
     9b8:	f1 f7       	brne	.-4      	; 0x9b6 <main+0x398>
     9ba:	9c 83       	std	Y+4, r25	; 0x04
     9bc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9be:	8d 81       	ldd	r24, Y+5	; 0x05
     9c0:	9e 81       	ldd	r25, Y+6	; 0x06
     9c2:	01 97       	sbiw	r24, 0x01	; 1
     9c4:	9e 83       	std	Y+6, r25	; 0x06
     9c6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9c8:	8d 81       	ldd	r24, Y+5	; 0x05
     9ca:	9e 81       	ldd	r25, Y+6	; 0x06
     9cc:	00 97       	sbiw	r24, 0x00	; 0
     9ce:	69 f7       	brne	.-38     	; 0x9aa <main+0x38c>
     9d0:	34 ce       	rjmp	.-920    	; 0x63a <main+0x1c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9d2:	6f 81       	ldd	r22, Y+7	; 0x07
     9d4:	78 85       	ldd	r23, Y+8	; 0x08
     9d6:	89 85       	ldd	r24, Y+9	; 0x09
     9d8:	9a 85       	ldd	r25, Y+10	; 0x0a
     9da:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixunssfsi>
     9de:	dc 01       	movw	r26, r24
     9e0:	cb 01       	movw	r24, r22
     9e2:	9e 83       	std	Y+6, r25	; 0x06
     9e4:	8d 83       	std	Y+5, r24	; 0x05
     9e6:	8d 81       	ldd	r24, Y+5	; 0x05
     9e8:	9e 81       	ldd	r25, Y+6	; 0x06
     9ea:	9a 83       	std	Y+2, r25	; 0x02
     9ec:	89 83       	std	Y+1, r24	; 0x01
     9ee:	89 81       	ldd	r24, Y+1	; 0x01
     9f0:	9a 81       	ldd	r25, Y+2	; 0x02
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	f1 f7       	brne	.-4      	; 0x9f2 <main+0x3d4>
     9f6:	9a 83       	std	Y+2, r25	; 0x02
     9f8:	89 83       	std	Y+1, r24	; 0x01
     9fa:	1f ce       	rjmp	.-962    	; 0x63a <main+0x1c>

000009fc <__fixunssfsi>:
     9fc:	ef 92       	push	r14
     9fe:	ff 92       	push	r15
     a00:	0f 93       	push	r16
     a02:	1f 93       	push	r17
     a04:	7b 01       	movw	r14, r22
     a06:	8c 01       	movw	r16, r24
     a08:	20 e0       	ldi	r18, 0x00	; 0
     a0a:	30 e0       	ldi	r19, 0x00	; 0
     a0c:	40 e0       	ldi	r20, 0x00	; 0
     a0e:	5f e4       	ldi	r21, 0x4F	; 79
     a10:	0e 94 fe 07 	call	0xffc	; 0xffc <__gesf2>
     a14:	88 23       	and	r24, r24
     a16:	8c f0       	brlt	.+34     	; 0xa3a <__fixunssfsi+0x3e>
     a18:	c8 01       	movw	r24, r16
     a1a:	b7 01       	movw	r22, r14
     a1c:	20 e0       	ldi	r18, 0x00	; 0
     a1e:	30 e0       	ldi	r19, 0x00	; 0
     a20:	40 e0       	ldi	r20, 0x00	; 0
     a22:	5f e4       	ldi	r21, 0x4F	; 79
     a24:	0e 94 76 06 	call	0xcec	; 0xcec <__subsf3>
     a28:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__fixsfsi>
     a2c:	9b 01       	movw	r18, r22
     a2e:	ac 01       	movw	r20, r24
     a30:	20 50       	subi	r18, 0x00	; 0
     a32:	30 40       	sbci	r19, 0x00	; 0
     a34:	40 40       	sbci	r20, 0x00	; 0
     a36:	50 48       	sbci	r21, 0x80	; 128
     a38:	06 c0       	rjmp	.+12     	; 0xa46 <__fixunssfsi+0x4a>
     a3a:	c8 01       	movw	r24, r16
     a3c:	b7 01       	movw	r22, r14
     a3e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__fixsfsi>
     a42:	9b 01       	movw	r18, r22
     a44:	ac 01       	movw	r20, r24
     a46:	b9 01       	movw	r22, r18
     a48:	ca 01       	movw	r24, r20
     a4a:	1f 91       	pop	r17
     a4c:	0f 91       	pop	r16
     a4e:	ff 90       	pop	r15
     a50:	ef 90       	pop	r14
     a52:	08 95       	ret

00000a54 <_fpadd_parts>:
     a54:	a0 e0       	ldi	r26, 0x00	; 0
     a56:	b0 e0       	ldi	r27, 0x00	; 0
     a58:	e0 e3       	ldi	r30, 0x30	; 48
     a5a:	f5 e0       	ldi	r31, 0x05	; 5
     a5c:	0c 94 7f 0a 	jmp	0x14fe	; 0x14fe <__prologue_saves__>
     a60:	dc 01       	movw	r26, r24
     a62:	2b 01       	movw	r4, r22
     a64:	fa 01       	movw	r30, r20
     a66:	9c 91       	ld	r25, X
     a68:	92 30       	cpi	r25, 0x02	; 2
     a6a:	08 f4       	brcc	.+2      	; 0xa6e <_fpadd_parts+0x1a>
     a6c:	39 c1       	rjmp	.+626    	; 0xce0 <_fpadd_parts+0x28c>
     a6e:	eb 01       	movw	r28, r22
     a70:	88 81       	ld	r24, Y
     a72:	82 30       	cpi	r24, 0x02	; 2
     a74:	08 f4       	brcc	.+2      	; 0xa78 <_fpadd_parts+0x24>
     a76:	33 c1       	rjmp	.+614    	; 0xcde <_fpadd_parts+0x28a>
     a78:	94 30       	cpi	r25, 0x04	; 4
     a7a:	69 f4       	brne	.+26     	; 0xa96 <_fpadd_parts+0x42>
     a7c:	84 30       	cpi	r24, 0x04	; 4
     a7e:	09 f0       	breq	.+2      	; 0xa82 <_fpadd_parts+0x2e>
     a80:	2f c1       	rjmp	.+606    	; 0xce0 <_fpadd_parts+0x28c>
     a82:	11 96       	adiw	r26, 0x01	; 1
     a84:	9c 91       	ld	r25, X
     a86:	11 97       	sbiw	r26, 0x01	; 1
     a88:	89 81       	ldd	r24, Y+1	; 0x01
     a8a:	98 17       	cp	r25, r24
     a8c:	09 f4       	brne	.+2      	; 0xa90 <_fpadd_parts+0x3c>
     a8e:	28 c1       	rjmp	.+592    	; 0xce0 <_fpadd_parts+0x28c>
     a90:	a0 e0       	ldi	r26, 0x00	; 0
     a92:	b2 e0       	ldi	r27, 0x02	; 2
     a94:	25 c1       	rjmp	.+586    	; 0xce0 <_fpadd_parts+0x28c>
     a96:	84 30       	cpi	r24, 0x04	; 4
     a98:	09 f4       	brne	.+2      	; 0xa9c <_fpadd_parts+0x48>
     a9a:	21 c1       	rjmp	.+578    	; 0xcde <_fpadd_parts+0x28a>
     a9c:	82 30       	cpi	r24, 0x02	; 2
     a9e:	a9 f4       	brne	.+42     	; 0xaca <_fpadd_parts+0x76>
     aa0:	92 30       	cpi	r25, 0x02	; 2
     aa2:	09 f0       	breq	.+2      	; 0xaa6 <_fpadd_parts+0x52>
     aa4:	1d c1       	rjmp	.+570    	; 0xce0 <_fpadd_parts+0x28c>
     aa6:	9a 01       	movw	r18, r20
     aa8:	ad 01       	movw	r20, r26
     aaa:	88 e0       	ldi	r24, 0x08	; 8
     aac:	ea 01       	movw	r28, r20
     aae:	09 90       	ld	r0, Y+
     ab0:	ae 01       	movw	r20, r28
     ab2:	e9 01       	movw	r28, r18
     ab4:	09 92       	st	Y+, r0
     ab6:	9e 01       	movw	r18, r28
     ab8:	81 50       	subi	r24, 0x01	; 1
     aba:	c1 f7       	brne	.-16     	; 0xaac <_fpadd_parts+0x58>
     abc:	e2 01       	movw	r28, r4
     abe:	89 81       	ldd	r24, Y+1	; 0x01
     ac0:	11 96       	adiw	r26, 0x01	; 1
     ac2:	9c 91       	ld	r25, X
     ac4:	89 23       	and	r24, r25
     ac6:	81 83       	std	Z+1, r24	; 0x01
     ac8:	08 c1       	rjmp	.+528    	; 0xcda <_fpadd_parts+0x286>
     aca:	92 30       	cpi	r25, 0x02	; 2
     acc:	09 f4       	brne	.+2      	; 0xad0 <_fpadd_parts+0x7c>
     ace:	07 c1       	rjmp	.+526    	; 0xcde <_fpadd_parts+0x28a>
     ad0:	12 96       	adiw	r26, 0x02	; 2
     ad2:	2d 90       	ld	r2, X+
     ad4:	3c 90       	ld	r3, X
     ad6:	13 97       	sbiw	r26, 0x03	; 3
     ad8:	eb 01       	movw	r28, r22
     ada:	8a 81       	ldd	r24, Y+2	; 0x02
     adc:	9b 81       	ldd	r25, Y+3	; 0x03
     ade:	14 96       	adiw	r26, 0x04	; 4
     ae0:	ad 90       	ld	r10, X+
     ae2:	bd 90       	ld	r11, X+
     ae4:	cd 90       	ld	r12, X+
     ae6:	dc 90       	ld	r13, X
     ae8:	17 97       	sbiw	r26, 0x07	; 7
     aea:	ec 80       	ldd	r14, Y+4	; 0x04
     aec:	fd 80       	ldd	r15, Y+5	; 0x05
     aee:	0e 81       	ldd	r16, Y+6	; 0x06
     af0:	1f 81       	ldd	r17, Y+7	; 0x07
     af2:	91 01       	movw	r18, r2
     af4:	28 1b       	sub	r18, r24
     af6:	39 0b       	sbc	r19, r25
     af8:	b9 01       	movw	r22, r18
     afa:	37 ff       	sbrs	r19, 7
     afc:	04 c0       	rjmp	.+8      	; 0xb06 <_fpadd_parts+0xb2>
     afe:	66 27       	eor	r22, r22
     b00:	77 27       	eor	r23, r23
     b02:	62 1b       	sub	r22, r18
     b04:	73 0b       	sbc	r23, r19
     b06:	60 32       	cpi	r22, 0x20	; 32
     b08:	71 05       	cpc	r23, r1
     b0a:	0c f0       	brlt	.+2      	; 0xb0e <_fpadd_parts+0xba>
     b0c:	61 c0       	rjmp	.+194    	; 0xbd0 <_fpadd_parts+0x17c>
     b0e:	12 16       	cp	r1, r18
     b10:	13 06       	cpc	r1, r19
     b12:	6c f5       	brge	.+90     	; 0xb6e <_fpadd_parts+0x11a>
     b14:	37 01       	movw	r6, r14
     b16:	48 01       	movw	r8, r16
     b18:	06 2e       	mov	r0, r22
     b1a:	04 c0       	rjmp	.+8      	; 0xb24 <_fpadd_parts+0xd0>
     b1c:	96 94       	lsr	r9
     b1e:	87 94       	ror	r8
     b20:	77 94       	ror	r7
     b22:	67 94       	ror	r6
     b24:	0a 94       	dec	r0
     b26:	d2 f7       	brpl	.-12     	; 0xb1c <_fpadd_parts+0xc8>
     b28:	21 e0       	ldi	r18, 0x01	; 1
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	40 e0       	ldi	r20, 0x00	; 0
     b2e:	50 e0       	ldi	r21, 0x00	; 0
     b30:	04 c0       	rjmp	.+8      	; 0xb3a <_fpadd_parts+0xe6>
     b32:	22 0f       	add	r18, r18
     b34:	33 1f       	adc	r19, r19
     b36:	44 1f       	adc	r20, r20
     b38:	55 1f       	adc	r21, r21
     b3a:	6a 95       	dec	r22
     b3c:	d2 f7       	brpl	.-12     	; 0xb32 <_fpadd_parts+0xde>
     b3e:	21 50       	subi	r18, 0x01	; 1
     b40:	30 40       	sbci	r19, 0x00	; 0
     b42:	40 40       	sbci	r20, 0x00	; 0
     b44:	50 40       	sbci	r21, 0x00	; 0
     b46:	2e 21       	and	r18, r14
     b48:	3f 21       	and	r19, r15
     b4a:	40 23       	and	r20, r16
     b4c:	51 23       	and	r21, r17
     b4e:	21 15       	cp	r18, r1
     b50:	31 05       	cpc	r19, r1
     b52:	41 05       	cpc	r20, r1
     b54:	51 05       	cpc	r21, r1
     b56:	21 f0       	breq	.+8      	; 0xb60 <_fpadd_parts+0x10c>
     b58:	21 e0       	ldi	r18, 0x01	; 1
     b5a:	30 e0       	ldi	r19, 0x00	; 0
     b5c:	40 e0       	ldi	r20, 0x00	; 0
     b5e:	50 e0       	ldi	r21, 0x00	; 0
     b60:	79 01       	movw	r14, r18
     b62:	8a 01       	movw	r16, r20
     b64:	e6 28       	or	r14, r6
     b66:	f7 28       	or	r15, r7
     b68:	08 29       	or	r16, r8
     b6a:	19 29       	or	r17, r9
     b6c:	3c c0       	rjmp	.+120    	; 0xbe6 <_fpadd_parts+0x192>
     b6e:	23 2b       	or	r18, r19
     b70:	d1 f1       	breq	.+116    	; 0xbe6 <_fpadd_parts+0x192>
     b72:	26 0e       	add	r2, r22
     b74:	37 1e       	adc	r3, r23
     b76:	35 01       	movw	r6, r10
     b78:	46 01       	movw	r8, r12
     b7a:	06 2e       	mov	r0, r22
     b7c:	04 c0       	rjmp	.+8      	; 0xb86 <_fpadd_parts+0x132>
     b7e:	96 94       	lsr	r9
     b80:	87 94       	ror	r8
     b82:	77 94       	ror	r7
     b84:	67 94       	ror	r6
     b86:	0a 94       	dec	r0
     b88:	d2 f7       	brpl	.-12     	; 0xb7e <_fpadd_parts+0x12a>
     b8a:	21 e0       	ldi	r18, 0x01	; 1
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	40 e0       	ldi	r20, 0x00	; 0
     b90:	50 e0       	ldi	r21, 0x00	; 0
     b92:	04 c0       	rjmp	.+8      	; 0xb9c <_fpadd_parts+0x148>
     b94:	22 0f       	add	r18, r18
     b96:	33 1f       	adc	r19, r19
     b98:	44 1f       	adc	r20, r20
     b9a:	55 1f       	adc	r21, r21
     b9c:	6a 95       	dec	r22
     b9e:	d2 f7       	brpl	.-12     	; 0xb94 <_fpadd_parts+0x140>
     ba0:	21 50       	subi	r18, 0x01	; 1
     ba2:	30 40       	sbci	r19, 0x00	; 0
     ba4:	40 40       	sbci	r20, 0x00	; 0
     ba6:	50 40       	sbci	r21, 0x00	; 0
     ba8:	2a 21       	and	r18, r10
     baa:	3b 21       	and	r19, r11
     bac:	4c 21       	and	r20, r12
     bae:	5d 21       	and	r21, r13
     bb0:	21 15       	cp	r18, r1
     bb2:	31 05       	cpc	r19, r1
     bb4:	41 05       	cpc	r20, r1
     bb6:	51 05       	cpc	r21, r1
     bb8:	21 f0       	breq	.+8      	; 0xbc2 <_fpadd_parts+0x16e>
     bba:	21 e0       	ldi	r18, 0x01	; 1
     bbc:	30 e0       	ldi	r19, 0x00	; 0
     bbe:	40 e0       	ldi	r20, 0x00	; 0
     bc0:	50 e0       	ldi	r21, 0x00	; 0
     bc2:	59 01       	movw	r10, r18
     bc4:	6a 01       	movw	r12, r20
     bc6:	a6 28       	or	r10, r6
     bc8:	b7 28       	or	r11, r7
     bca:	c8 28       	or	r12, r8
     bcc:	d9 28       	or	r13, r9
     bce:	0b c0       	rjmp	.+22     	; 0xbe6 <_fpadd_parts+0x192>
     bd0:	82 15       	cp	r24, r2
     bd2:	93 05       	cpc	r25, r3
     bd4:	2c f0       	brlt	.+10     	; 0xbe0 <_fpadd_parts+0x18c>
     bd6:	1c 01       	movw	r2, r24
     bd8:	aa 24       	eor	r10, r10
     bda:	bb 24       	eor	r11, r11
     bdc:	65 01       	movw	r12, r10
     bde:	03 c0       	rjmp	.+6      	; 0xbe6 <_fpadd_parts+0x192>
     be0:	ee 24       	eor	r14, r14
     be2:	ff 24       	eor	r15, r15
     be4:	87 01       	movw	r16, r14
     be6:	11 96       	adiw	r26, 0x01	; 1
     be8:	9c 91       	ld	r25, X
     bea:	d2 01       	movw	r26, r4
     bec:	11 96       	adiw	r26, 0x01	; 1
     bee:	8c 91       	ld	r24, X
     bf0:	98 17       	cp	r25, r24
     bf2:	09 f4       	brne	.+2      	; 0xbf6 <_fpadd_parts+0x1a2>
     bf4:	45 c0       	rjmp	.+138    	; 0xc80 <_fpadd_parts+0x22c>
     bf6:	99 23       	and	r25, r25
     bf8:	39 f0       	breq	.+14     	; 0xc08 <_fpadd_parts+0x1b4>
     bfa:	a8 01       	movw	r20, r16
     bfc:	97 01       	movw	r18, r14
     bfe:	2a 19       	sub	r18, r10
     c00:	3b 09       	sbc	r19, r11
     c02:	4c 09       	sbc	r20, r12
     c04:	5d 09       	sbc	r21, r13
     c06:	06 c0       	rjmp	.+12     	; 0xc14 <_fpadd_parts+0x1c0>
     c08:	a6 01       	movw	r20, r12
     c0a:	95 01       	movw	r18, r10
     c0c:	2e 19       	sub	r18, r14
     c0e:	3f 09       	sbc	r19, r15
     c10:	40 0b       	sbc	r20, r16
     c12:	51 0b       	sbc	r21, r17
     c14:	57 fd       	sbrc	r21, 7
     c16:	08 c0       	rjmp	.+16     	; 0xc28 <_fpadd_parts+0x1d4>
     c18:	11 82       	std	Z+1, r1	; 0x01
     c1a:	33 82       	std	Z+3, r3	; 0x03
     c1c:	22 82       	std	Z+2, r2	; 0x02
     c1e:	24 83       	std	Z+4, r18	; 0x04
     c20:	35 83       	std	Z+5, r19	; 0x05
     c22:	46 83       	std	Z+6, r20	; 0x06
     c24:	57 83       	std	Z+7, r21	; 0x07
     c26:	1d c0       	rjmp	.+58     	; 0xc62 <_fpadd_parts+0x20e>
     c28:	81 e0       	ldi	r24, 0x01	; 1
     c2a:	81 83       	std	Z+1, r24	; 0x01
     c2c:	33 82       	std	Z+3, r3	; 0x03
     c2e:	22 82       	std	Z+2, r2	; 0x02
     c30:	88 27       	eor	r24, r24
     c32:	99 27       	eor	r25, r25
     c34:	dc 01       	movw	r26, r24
     c36:	82 1b       	sub	r24, r18
     c38:	93 0b       	sbc	r25, r19
     c3a:	a4 0b       	sbc	r26, r20
     c3c:	b5 0b       	sbc	r27, r21
     c3e:	84 83       	std	Z+4, r24	; 0x04
     c40:	95 83       	std	Z+5, r25	; 0x05
     c42:	a6 83       	std	Z+6, r26	; 0x06
     c44:	b7 83       	std	Z+7, r27	; 0x07
     c46:	0d c0       	rjmp	.+26     	; 0xc62 <_fpadd_parts+0x20e>
     c48:	22 0f       	add	r18, r18
     c4a:	33 1f       	adc	r19, r19
     c4c:	44 1f       	adc	r20, r20
     c4e:	55 1f       	adc	r21, r21
     c50:	24 83       	std	Z+4, r18	; 0x04
     c52:	35 83       	std	Z+5, r19	; 0x05
     c54:	46 83       	std	Z+6, r20	; 0x06
     c56:	57 83       	std	Z+7, r21	; 0x07
     c58:	82 81       	ldd	r24, Z+2	; 0x02
     c5a:	93 81       	ldd	r25, Z+3	; 0x03
     c5c:	01 97       	sbiw	r24, 0x01	; 1
     c5e:	93 83       	std	Z+3, r25	; 0x03
     c60:	82 83       	std	Z+2, r24	; 0x02
     c62:	24 81       	ldd	r18, Z+4	; 0x04
     c64:	35 81       	ldd	r19, Z+5	; 0x05
     c66:	46 81       	ldd	r20, Z+6	; 0x06
     c68:	57 81       	ldd	r21, Z+7	; 0x07
     c6a:	da 01       	movw	r26, r20
     c6c:	c9 01       	movw	r24, r18
     c6e:	01 97       	sbiw	r24, 0x01	; 1
     c70:	a1 09       	sbc	r26, r1
     c72:	b1 09       	sbc	r27, r1
     c74:	8f 5f       	subi	r24, 0xFF	; 255
     c76:	9f 4f       	sbci	r25, 0xFF	; 255
     c78:	af 4f       	sbci	r26, 0xFF	; 255
     c7a:	bf 43       	sbci	r27, 0x3F	; 63
     c7c:	28 f3       	brcs	.-54     	; 0xc48 <_fpadd_parts+0x1f4>
     c7e:	0b c0       	rjmp	.+22     	; 0xc96 <_fpadd_parts+0x242>
     c80:	91 83       	std	Z+1, r25	; 0x01
     c82:	33 82       	std	Z+3, r3	; 0x03
     c84:	22 82       	std	Z+2, r2	; 0x02
     c86:	ea 0c       	add	r14, r10
     c88:	fb 1c       	adc	r15, r11
     c8a:	0c 1d       	adc	r16, r12
     c8c:	1d 1d       	adc	r17, r13
     c8e:	e4 82       	std	Z+4, r14	; 0x04
     c90:	f5 82       	std	Z+5, r15	; 0x05
     c92:	06 83       	std	Z+6, r16	; 0x06
     c94:	17 83       	std	Z+7, r17	; 0x07
     c96:	83 e0       	ldi	r24, 0x03	; 3
     c98:	80 83       	st	Z, r24
     c9a:	24 81       	ldd	r18, Z+4	; 0x04
     c9c:	35 81       	ldd	r19, Z+5	; 0x05
     c9e:	46 81       	ldd	r20, Z+6	; 0x06
     ca0:	57 81       	ldd	r21, Z+7	; 0x07
     ca2:	57 ff       	sbrs	r21, 7
     ca4:	1a c0       	rjmp	.+52     	; 0xcda <_fpadd_parts+0x286>
     ca6:	c9 01       	movw	r24, r18
     ca8:	aa 27       	eor	r26, r26
     caa:	97 fd       	sbrc	r25, 7
     cac:	a0 95       	com	r26
     cae:	ba 2f       	mov	r27, r26
     cb0:	81 70       	andi	r24, 0x01	; 1
     cb2:	90 70       	andi	r25, 0x00	; 0
     cb4:	a0 70       	andi	r26, 0x00	; 0
     cb6:	b0 70       	andi	r27, 0x00	; 0
     cb8:	56 95       	lsr	r21
     cba:	47 95       	ror	r20
     cbc:	37 95       	ror	r19
     cbe:	27 95       	ror	r18
     cc0:	82 2b       	or	r24, r18
     cc2:	93 2b       	or	r25, r19
     cc4:	a4 2b       	or	r26, r20
     cc6:	b5 2b       	or	r27, r21
     cc8:	84 83       	std	Z+4, r24	; 0x04
     cca:	95 83       	std	Z+5, r25	; 0x05
     ccc:	a6 83       	std	Z+6, r26	; 0x06
     cce:	b7 83       	std	Z+7, r27	; 0x07
     cd0:	82 81       	ldd	r24, Z+2	; 0x02
     cd2:	93 81       	ldd	r25, Z+3	; 0x03
     cd4:	01 96       	adiw	r24, 0x01	; 1
     cd6:	93 83       	std	Z+3, r25	; 0x03
     cd8:	82 83       	std	Z+2, r24	; 0x02
     cda:	df 01       	movw	r26, r30
     cdc:	01 c0       	rjmp	.+2      	; 0xce0 <_fpadd_parts+0x28c>
     cde:	d2 01       	movw	r26, r4
     ce0:	cd 01       	movw	r24, r26
     ce2:	cd b7       	in	r28, 0x3d	; 61
     ce4:	de b7       	in	r29, 0x3e	; 62
     ce6:	e2 e1       	ldi	r30, 0x12	; 18
     ce8:	0c 94 9b 0a 	jmp	0x1536	; 0x1536 <__epilogue_restores__>

00000cec <__subsf3>:
     cec:	a0 e2       	ldi	r26, 0x20	; 32
     cee:	b0 e0       	ldi	r27, 0x00	; 0
     cf0:	ec e7       	ldi	r30, 0x7C	; 124
     cf2:	f6 e0       	ldi	r31, 0x06	; 6
     cf4:	0c 94 8b 0a 	jmp	0x1516	; 0x1516 <__prologue_saves__+0x18>
     cf8:	69 83       	std	Y+1, r22	; 0x01
     cfa:	7a 83       	std	Y+2, r23	; 0x02
     cfc:	8b 83       	std	Y+3, r24	; 0x03
     cfe:	9c 83       	std	Y+4, r25	; 0x04
     d00:	2d 83       	std	Y+5, r18	; 0x05
     d02:	3e 83       	std	Y+6, r19	; 0x06
     d04:	4f 83       	std	Y+7, r20	; 0x07
     d06:	58 87       	std	Y+8, r21	; 0x08
     d08:	e9 e0       	ldi	r30, 0x09	; 9
     d0a:	ee 2e       	mov	r14, r30
     d0c:	f1 2c       	mov	r15, r1
     d0e:	ec 0e       	add	r14, r28
     d10:	fd 1e       	adc	r15, r29
     d12:	ce 01       	movw	r24, r28
     d14:	01 96       	adiw	r24, 0x01	; 1
     d16:	b7 01       	movw	r22, r14
     d18:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
     d1c:	8e 01       	movw	r16, r28
     d1e:	0f 5e       	subi	r16, 0xEF	; 239
     d20:	1f 4f       	sbci	r17, 0xFF	; 255
     d22:	ce 01       	movw	r24, r28
     d24:	05 96       	adiw	r24, 0x05	; 5
     d26:	b8 01       	movw	r22, r16
     d28:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
     d2c:	8a 89       	ldd	r24, Y+18	; 0x12
     d2e:	91 e0       	ldi	r25, 0x01	; 1
     d30:	89 27       	eor	r24, r25
     d32:	8a 8b       	std	Y+18, r24	; 0x12
     d34:	c7 01       	movw	r24, r14
     d36:	b8 01       	movw	r22, r16
     d38:	ae 01       	movw	r20, r28
     d3a:	47 5e       	subi	r20, 0xE7	; 231
     d3c:	5f 4f       	sbci	r21, 0xFF	; 255
     d3e:	0e 94 2a 05 	call	0xa54	; 0xa54 <_fpadd_parts>
     d42:	0e 94 b2 08 	call	0x1164	; 0x1164 <__pack_f>
     d46:	a0 96       	adiw	r28, 0x20	; 32
     d48:	e6 e0       	ldi	r30, 0x06	; 6
     d4a:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <__epilogue_restores__+0x18>

00000d4e <__addsf3>:
     d4e:	a0 e2       	ldi	r26, 0x20	; 32
     d50:	b0 e0       	ldi	r27, 0x00	; 0
     d52:	ed ea       	ldi	r30, 0xAD	; 173
     d54:	f6 e0       	ldi	r31, 0x06	; 6
     d56:	0c 94 8b 0a 	jmp	0x1516	; 0x1516 <__prologue_saves__+0x18>
     d5a:	69 83       	std	Y+1, r22	; 0x01
     d5c:	7a 83       	std	Y+2, r23	; 0x02
     d5e:	8b 83       	std	Y+3, r24	; 0x03
     d60:	9c 83       	std	Y+4, r25	; 0x04
     d62:	2d 83       	std	Y+5, r18	; 0x05
     d64:	3e 83       	std	Y+6, r19	; 0x06
     d66:	4f 83       	std	Y+7, r20	; 0x07
     d68:	58 87       	std	Y+8, r21	; 0x08
     d6a:	f9 e0       	ldi	r31, 0x09	; 9
     d6c:	ef 2e       	mov	r14, r31
     d6e:	f1 2c       	mov	r15, r1
     d70:	ec 0e       	add	r14, r28
     d72:	fd 1e       	adc	r15, r29
     d74:	ce 01       	movw	r24, r28
     d76:	01 96       	adiw	r24, 0x01	; 1
     d78:	b7 01       	movw	r22, r14
     d7a:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
     d7e:	8e 01       	movw	r16, r28
     d80:	0f 5e       	subi	r16, 0xEF	; 239
     d82:	1f 4f       	sbci	r17, 0xFF	; 255
     d84:	ce 01       	movw	r24, r28
     d86:	05 96       	adiw	r24, 0x05	; 5
     d88:	b8 01       	movw	r22, r16
     d8a:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
     d8e:	c7 01       	movw	r24, r14
     d90:	b8 01       	movw	r22, r16
     d92:	ae 01       	movw	r20, r28
     d94:	47 5e       	subi	r20, 0xE7	; 231
     d96:	5f 4f       	sbci	r21, 0xFF	; 255
     d98:	0e 94 2a 05 	call	0xa54	; 0xa54 <_fpadd_parts>
     d9c:	0e 94 b2 08 	call	0x1164	; 0x1164 <__pack_f>
     da0:	a0 96       	adiw	r28, 0x20	; 32
     da2:	e6 e0       	ldi	r30, 0x06	; 6
     da4:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <__epilogue_restores__+0x18>

00000da8 <__mulsf3>:
     da8:	a0 e2       	ldi	r26, 0x20	; 32
     daa:	b0 e0       	ldi	r27, 0x00	; 0
     dac:	ea ed       	ldi	r30, 0xDA	; 218
     dae:	f6 e0       	ldi	r31, 0x06	; 6
     db0:	0c 94 7f 0a 	jmp	0x14fe	; 0x14fe <__prologue_saves__>
     db4:	69 83       	std	Y+1, r22	; 0x01
     db6:	7a 83       	std	Y+2, r23	; 0x02
     db8:	8b 83       	std	Y+3, r24	; 0x03
     dba:	9c 83       	std	Y+4, r25	; 0x04
     dbc:	2d 83       	std	Y+5, r18	; 0x05
     dbe:	3e 83       	std	Y+6, r19	; 0x06
     dc0:	4f 83       	std	Y+7, r20	; 0x07
     dc2:	58 87       	std	Y+8, r21	; 0x08
     dc4:	ce 01       	movw	r24, r28
     dc6:	01 96       	adiw	r24, 0x01	; 1
     dc8:	be 01       	movw	r22, r28
     dca:	67 5f       	subi	r22, 0xF7	; 247
     dcc:	7f 4f       	sbci	r23, 0xFF	; 255
     dce:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
     dd2:	ce 01       	movw	r24, r28
     dd4:	05 96       	adiw	r24, 0x05	; 5
     dd6:	be 01       	movw	r22, r28
     dd8:	6f 5e       	subi	r22, 0xEF	; 239
     dda:	7f 4f       	sbci	r23, 0xFF	; 255
     ddc:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
     de0:	99 85       	ldd	r25, Y+9	; 0x09
     de2:	92 30       	cpi	r25, 0x02	; 2
     de4:	88 f0       	brcs	.+34     	; 0xe08 <__mulsf3+0x60>
     de6:	89 89       	ldd	r24, Y+17	; 0x11
     de8:	82 30       	cpi	r24, 0x02	; 2
     dea:	c8 f0       	brcs	.+50     	; 0xe1e <__mulsf3+0x76>
     dec:	94 30       	cpi	r25, 0x04	; 4
     dee:	19 f4       	brne	.+6      	; 0xdf6 <__mulsf3+0x4e>
     df0:	82 30       	cpi	r24, 0x02	; 2
     df2:	51 f4       	brne	.+20     	; 0xe08 <__mulsf3+0x60>
     df4:	04 c0       	rjmp	.+8      	; 0xdfe <__mulsf3+0x56>
     df6:	84 30       	cpi	r24, 0x04	; 4
     df8:	29 f4       	brne	.+10     	; 0xe04 <__mulsf3+0x5c>
     dfa:	92 30       	cpi	r25, 0x02	; 2
     dfc:	81 f4       	brne	.+32     	; 0xe1e <__mulsf3+0x76>
     dfe:	80 e0       	ldi	r24, 0x00	; 0
     e00:	92 e0       	ldi	r25, 0x02	; 2
     e02:	c6 c0       	rjmp	.+396    	; 0xf90 <__mulsf3+0x1e8>
     e04:	92 30       	cpi	r25, 0x02	; 2
     e06:	49 f4       	brne	.+18     	; 0xe1a <__mulsf3+0x72>
     e08:	20 e0       	ldi	r18, 0x00	; 0
     e0a:	9a 85       	ldd	r25, Y+10	; 0x0a
     e0c:	8a 89       	ldd	r24, Y+18	; 0x12
     e0e:	98 13       	cpse	r25, r24
     e10:	21 e0       	ldi	r18, 0x01	; 1
     e12:	2a 87       	std	Y+10, r18	; 0x0a
     e14:	ce 01       	movw	r24, r28
     e16:	09 96       	adiw	r24, 0x09	; 9
     e18:	bb c0       	rjmp	.+374    	; 0xf90 <__mulsf3+0x1e8>
     e1a:	82 30       	cpi	r24, 0x02	; 2
     e1c:	49 f4       	brne	.+18     	; 0xe30 <__mulsf3+0x88>
     e1e:	20 e0       	ldi	r18, 0x00	; 0
     e20:	9a 85       	ldd	r25, Y+10	; 0x0a
     e22:	8a 89       	ldd	r24, Y+18	; 0x12
     e24:	98 13       	cpse	r25, r24
     e26:	21 e0       	ldi	r18, 0x01	; 1
     e28:	2a 8b       	std	Y+18, r18	; 0x12
     e2a:	ce 01       	movw	r24, r28
     e2c:	41 96       	adiw	r24, 0x11	; 17
     e2e:	b0 c0       	rjmp	.+352    	; 0xf90 <__mulsf3+0x1e8>
     e30:	2d 84       	ldd	r2, Y+13	; 0x0d
     e32:	3e 84       	ldd	r3, Y+14	; 0x0e
     e34:	4f 84       	ldd	r4, Y+15	; 0x0f
     e36:	58 88       	ldd	r5, Y+16	; 0x10
     e38:	6d 88       	ldd	r6, Y+21	; 0x15
     e3a:	7e 88       	ldd	r7, Y+22	; 0x16
     e3c:	8f 88       	ldd	r8, Y+23	; 0x17
     e3e:	98 8c       	ldd	r9, Y+24	; 0x18
     e40:	ee 24       	eor	r14, r14
     e42:	ff 24       	eor	r15, r15
     e44:	87 01       	movw	r16, r14
     e46:	aa 24       	eor	r10, r10
     e48:	bb 24       	eor	r11, r11
     e4a:	65 01       	movw	r12, r10
     e4c:	40 e0       	ldi	r20, 0x00	; 0
     e4e:	50 e0       	ldi	r21, 0x00	; 0
     e50:	60 e0       	ldi	r22, 0x00	; 0
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	e0 e0       	ldi	r30, 0x00	; 0
     e56:	f0 e0       	ldi	r31, 0x00	; 0
     e58:	c1 01       	movw	r24, r2
     e5a:	81 70       	andi	r24, 0x01	; 1
     e5c:	90 70       	andi	r25, 0x00	; 0
     e5e:	89 2b       	or	r24, r25
     e60:	e9 f0       	breq	.+58     	; 0xe9c <__mulsf3+0xf4>
     e62:	e6 0c       	add	r14, r6
     e64:	f7 1c       	adc	r15, r7
     e66:	08 1d       	adc	r16, r8
     e68:	19 1d       	adc	r17, r9
     e6a:	9a 01       	movw	r18, r20
     e6c:	ab 01       	movw	r20, r22
     e6e:	2a 0d       	add	r18, r10
     e70:	3b 1d       	adc	r19, r11
     e72:	4c 1d       	adc	r20, r12
     e74:	5d 1d       	adc	r21, r13
     e76:	80 e0       	ldi	r24, 0x00	; 0
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	a0 e0       	ldi	r26, 0x00	; 0
     e7c:	b0 e0       	ldi	r27, 0x00	; 0
     e7e:	e6 14       	cp	r14, r6
     e80:	f7 04       	cpc	r15, r7
     e82:	08 05       	cpc	r16, r8
     e84:	19 05       	cpc	r17, r9
     e86:	20 f4       	brcc	.+8      	; 0xe90 <__mulsf3+0xe8>
     e88:	81 e0       	ldi	r24, 0x01	; 1
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	a0 e0       	ldi	r26, 0x00	; 0
     e8e:	b0 e0       	ldi	r27, 0x00	; 0
     e90:	ba 01       	movw	r22, r20
     e92:	a9 01       	movw	r20, r18
     e94:	48 0f       	add	r20, r24
     e96:	59 1f       	adc	r21, r25
     e98:	6a 1f       	adc	r22, r26
     e9a:	7b 1f       	adc	r23, r27
     e9c:	aa 0c       	add	r10, r10
     e9e:	bb 1c       	adc	r11, r11
     ea0:	cc 1c       	adc	r12, r12
     ea2:	dd 1c       	adc	r13, r13
     ea4:	97 fe       	sbrs	r9, 7
     ea6:	08 c0       	rjmp	.+16     	; 0xeb8 <__mulsf3+0x110>
     ea8:	81 e0       	ldi	r24, 0x01	; 1
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	a0 e0       	ldi	r26, 0x00	; 0
     eae:	b0 e0       	ldi	r27, 0x00	; 0
     eb0:	a8 2a       	or	r10, r24
     eb2:	b9 2a       	or	r11, r25
     eb4:	ca 2a       	or	r12, r26
     eb6:	db 2a       	or	r13, r27
     eb8:	31 96       	adiw	r30, 0x01	; 1
     eba:	e0 32       	cpi	r30, 0x20	; 32
     ebc:	f1 05       	cpc	r31, r1
     ebe:	49 f0       	breq	.+18     	; 0xed2 <__mulsf3+0x12a>
     ec0:	66 0c       	add	r6, r6
     ec2:	77 1c       	adc	r7, r7
     ec4:	88 1c       	adc	r8, r8
     ec6:	99 1c       	adc	r9, r9
     ec8:	56 94       	lsr	r5
     eca:	47 94       	ror	r4
     ecc:	37 94       	ror	r3
     ece:	27 94       	ror	r2
     ed0:	c3 cf       	rjmp	.-122    	; 0xe58 <__mulsf3+0xb0>
     ed2:	fa 85       	ldd	r31, Y+10	; 0x0a
     ed4:	ea 89       	ldd	r30, Y+18	; 0x12
     ed6:	2b 89       	ldd	r18, Y+19	; 0x13
     ed8:	3c 89       	ldd	r19, Y+20	; 0x14
     eda:	8b 85       	ldd	r24, Y+11	; 0x0b
     edc:	9c 85       	ldd	r25, Y+12	; 0x0c
     ede:	28 0f       	add	r18, r24
     ee0:	39 1f       	adc	r19, r25
     ee2:	2e 5f       	subi	r18, 0xFE	; 254
     ee4:	3f 4f       	sbci	r19, 0xFF	; 255
     ee6:	17 c0       	rjmp	.+46     	; 0xf16 <__mulsf3+0x16e>
     ee8:	ca 01       	movw	r24, r20
     eea:	81 70       	andi	r24, 0x01	; 1
     eec:	90 70       	andi	r25, 0x00	; 0
     eee:	89 2b       	or	r24, r25
     ef0:	61 f0       	breq	.+24     	; 0xf0a <__mulsf3+0x162>
     ef2:	16 95       	lsr	r17
     ef4:	07 95       	ror	r16
     ef6:	f7 94       	ror	r15
     ef8:	e7 94       	ror	r14
     efa:	80 e0       	ldi	r24, 0x00	; 0
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	a0 e0       	ldi	r26, 0x00	; 0
     f00:	b0 e8       	ldi	r27, 0x80	; 128
     f02:	e8 2a       	or	r14, r24
     f04:	f9 2a       	or	r15, r25
     f06:	0a 2b       	or	r16, r26
     f08:	1b 2b       	or	r17, r27
     f0a:	76 95       	lsr	r23
     f0c:	67 95       	ror	r22
     f0e:	57 95       	ror	r21
     f10:	47 95       	ror	r20
     f12:	2f 5f       	subi	r18, 0xFF	; 255
     f14:	3f 4f       	sbci	r19, 0xFF	; 255
     f16:	77 fd       	sbrc	r23, 7
     f18:	e7 cf       	rjmp	.-50     	; 0xee8 <__mulsf3+0x140>
     f1a:	0c c0       	rjmp	.+24     	; 0xf34 <__mulsf3+0x18c>
     f1c:	44 0f       	add	r20, r20
     f1e:	55 1f       	adc	r21, r21
     f20:	66 1f       	adc	r22, r22
     f22:	77 1f       	adc	r23, r23
     f24:	17 fd       	sbrc	r17, 7
     f26:	41 60       	ori	r20, 0x01	; 1
     f28:	ee 0c       	add	r14, r14
     f2a:	ff 1c       	adc	r15, r15
     f2c:	00 1f       	adc	r16, r16
     f2e:	11 1f       	adc	r17, r17
     f30:	21 50       	subi	r18, 0x01	; 1
     f32:	30 40       	sbci	r19, 0x00	; 0
     f34:	40 30       	cpi	r20, 0x00	; 0
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	59 07       	cpc	r21, r25
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	69 07       	cpc	r22, r25
     f3e:	90 e4       	ldi	r25, 0x40	; 64
     f40:	79 07       	cpc	r23, r25
     f42:	60 f3       	brcs	.-40     	; 0xf1c <__mulsf3+0x174>
     f44:	2b 8f       	std	Y+27, r18	; 0x1b
     f46:	3c 8f       	std	Y+28, r19	; 0x1c
     f48:	db 01       	movw	r26, r22
     f4a:	ca 01       	movw	r24, r20
     f4c:	8f 77       	andi	r24, 0x7F	; 127
     f4e:	90 70       	andi	r25, 0x00	; 0
     f50:	a0 70       	andi	r26, 0x00	; 0
     f52:	b0 70       	andi	r27, 0x00	; 0
     f54:	80 34       	cpi	r24, 0x40	; 64
     f56:	91 05       	cpc	r25, r1
     f58:	a1 05       	cpc	r26, r1
     f5a:	b1 05       	cpc	r27, r1
     f5c:	61 f4       	brne	.+24     	; 0xf76 <__mulsf3+0x1ce>
     f5e:	47 fd       	sbrc	r20, 7
     f60:	0a c0       	rjmp	.+20     	; 0xf76 <__mulsf3+0x1ce>
     f62:	e1 14       	cp	r14, r1
     f64:	f1 04       	cpc	r15, r1
     f66:	01 05       	cpc	r16, r1
     f68:	11 05       	cpc	r17, r1
     f6a:	29 f0       	breq	.+10     	; 0xf76 <__mulsf3+0x1ce>
     f6c:	40 5c       	subi	r20, 0xC0	; 192
     f6e:	5f 4f       	sbci	r21, 0xFF	; 255
     f70:	6f 4f       	sbci	r22, 0xFF	; 255
     f72:	7f 4f       	sbci	r23, 0xFF	; 255
     f74:	40 78       	andi	r20, 0x80	; 128
     f76:	1a 8e       	std	Y+26, r1	; 0x1a
     f78:	fe 17       	cp	r31, r30
     f7a:	11 f0       	breq	.+4      	; 0xf80 <__mulsf3+0x1d8>
     f7c:	81 e0       	ldi	r24, 0x01	; 1
     f7e:	8a 8f       	std	Y+26, r24	; 0x1a
     f80:	4d 8f       	std	Y+29, r20	; 0x1d
     f82:	5e 8f       	std	Y+30, r21	; 0x1e
     f84:	6f 8f       	std	Y+31, r22	; 0x1f
     f86:	78 a3       	std	Y+32, r23	; 0x20
     f88:	83 e0       	ldi	r24, 0x03	; 3
     f8a:	89 8f       	std	Y+25, r24	; 0x19
     f8c:	ce 01       	movw	r24, r28
     f8e:	49 96       	adiw	r24, 0x19	; 25
     f90:	0e 94 b2 08 	call	0x1164	; 0x1164 <__pack_f>
     f94:	a0 96       	adiw	r28, 0x20	; 32
     f96:	e2 e1       	ldi	r30, 0x12	; 18
     f98:	0c 94 9b 0a 	jmp	0x1536	; 0x1536 <__epilogue_restores__>

00000f9c <__gtsf2>:
     f9c:	a8 e1       	ldi	r26, 0x18	; 24
     f9e:	b0 e0       	ldi	r27, 0x00	; 0
     fa0:	e4 ed       	ldi	r30, 0xD4	; 212
     fa2:	f7 e0       	ldi	r31, 0x07	; 7
     fa4:	0c 94 8b 0a 	jmp	0x1516	; 0x1516 <__prologue_saves__+0x18>
     fa8:	69 83       	std	Y+1, r22	; 0x01
     faa:	7a 83       	std	Y+2, r23	; 0x02
     fac:	8b 83       	std	Y+3, r24	; 0x03
     fae:	9c 83       	std	Y+4, r25	; 0x04
     fb0:	2d 83       	std	Y+5, r18	; 0x05
     fb2:	3e 83       	std	Y+6, r19	; 0x06
     fb4:	4f 83       	std	Y+7, r20	; 0x07
     fb6:	58 87       	std	Y+8, r21	; 0x08
     fb8:	89 e0       	ldi	r24, 0x09	; 9
     fba:	e8 2e       	mov	r14, r24
     fbc:	f1 2c       	mov	r15, r1
     fbe:	ec 0e       	add	r14, r28
     fc0:	fd 1e       	adc	r15, r29
     fc2:	ce 01       	movw	r24, r28
     fc4:	01 96       	adiw	r24, 0x01	; 1
     fc6:	b7 01       	movw	r22, r14
     fc8:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
     fcc:	8e 01       	movw	r16, r28
     fce:	0f 5e       	subi	r16, 0xEF	; 239
     fd0:	1f 4f       	sbci	r17, 0xFF	; 255
     fd2:	ce 01       	movw	r24, r28
     fd4:	05 96       	adiw	r24, 0x05	; 5
     fd6:	b8 01       	movw	r22, r16
     fd8:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
     fdc:	89 85       	ldd	r24, Y+9	; 0x09
     fde:	82 30       	cpi	r24, 0x02	; 2
     fe0:	40 f0       	brcs	.+16     	; 0xff2 <__gtsf2+0x56>
     fe2:	89 89       	ldd	r24, Y+17	; 0x11
     fe4:	82 30       	cpi	r24, 0x02	; 2
     fe6:	28 f0       	brcs	.+10     	; 0xff2 <__gtsf2+0x56>
     fe8:	c7 01       	movw	r24, r14
     fea:	b8 01       	movw	r22, r16
     fec:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__fpcmp_parts_f>
     ff0:	01 c0       	rjmp	.+2      	; 0xff4 <__gtsf2+0x58>
     ff2:	8f ef       	ldi	r24, 0xFF	; 255
     ff4:	68 96       	adiw	r28, 0x18	; 24
     ff6:	e6 e0       	ldi	r30, 0x06	; 6
     ff8:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <__epilogue_restores__+0x18>

00000ffc <__gesf2>:
     ffc:	a8 e1       	ldi	r26, 0x18	; 24
     ffe:	b0 e0       	ldi	r27, 0x00	; 0
    1000:	e4 e0       	ldi	r30, 0x04	; 4
    1002:	f8 e0       	ldi	r31, 0x08	; 8
    1004:	0c 94 8b 0a 	jmp	0x1516	; 0x1516 <__prologue_saves__+0x18>
    1008:	69 83       	std	Y+1, r22	; 0x01
    100a:	7a 83       	std	Y+2, r23	; 0x02
    100c:	8b 83       	std	Y+3, r24	; 0x03
    100e:	9c 83       	std	Y+4, r25	; 0x04
    1010:	2d 83       	std	Y+5, r18	; 0x05
    1012:	3e 83       	std	Y+6, r19	; 0x06
    1014:	4f 83       	std	Y+7, r20	; 0x07
    1016:	58 87       	std	Y+8, r21	; 0x08
    1018:	89 e0       	ldi	r24, 0x09	; 9
    101a:	e8 2e       	mov	r14, r24
    101c:	f1 2c       	mov	r15, r1
    101e:	ec 0e       	add	r14, r28
    1020:	fd 1e       	adc	r15, r29
    1022:	ce 01       	movw	r24, r28
    1024:	01 96       	adiw	r24, 0x01	; 1
    1026:	b7 01       	movw	r22, r14
    1028:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
    102c:	8e 01       	movw	r16, r28
    102e:	0f 5e       	subi	r16, 0xEF	; 239
    1030:	1f 4f       	sbci	r17, 0xFF	; 255
    1032:	ce 01       	movw	r24, r28
    1034:	05 96       	adiw	r24, 0x05	; 5
    1036:	b8 01       	movw	r22, r16
    1038:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
    103c:	89 85       	ldd	r24, Y+9	; 0x09
    103e:	82 30       	cpi	r24, 0x02	; 2
    1040:	40 f0       	brcs	.+16     	; 0x1052 <__gesf2+0x56>
    1042:	89 89       	ldd	r24, Y+17	; 0x11
    1044:	82 30       	cpi	r24, 0x02	; 2
    1046:	28 f0       	brcs	.+10     	; 0x1052 <__gesf2+0x56>
    1048:	c7 01       	movw	r24, r14
    104a:	b8 01       	movw	r22, r16
    104c:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__fpcmp_parts_f>
    1050:	01 c0       	rjmp	.+2      	; 0x1054 <__gesf2+0x58>
    1052:	8f ef       	ldi	r24, 0xFF	; 255
    1054:	68 96       	adiw	r28, 0x18	; 24
    1056:	e6 e0       	ldi	r30, 0x06	; 6
    1058:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <__epilogue_restores__+0x18>

0000105c <__ltsf2>:
    105c:	a8 e1       	ldi	r26, 0x18	; 24
    105e:	b0 e0       	ldi	r27, 0x00	; 0
    1060:	e4 e3       	ldi	r30, 0x34	; 52
    1062:	f8 e0       	ldi	r31, 0x08	; 8
    1064:	0c 94 8b 0a 	jmp	0x1516	; 0x1516 <__prologue_saves__+0x18>
    1068:	69 83       	std	Y+1, r22	; 0x01
    106a:	7a 83       	std	Y+2, r23	; 0x02
    106c:	8b 83       	std	Y+3, r24	; 0x03
    106e:	9c 83       	std	Y+4, r25	; 0x04
    1070:	2d 83       	std	Y+5, r18	; 0x05
    1072:	3e 83       	std	Y+6, r19	; 0x06
    1074:	4f 83       	std	Y+7, r20	; 0x07
    1076:	58 87       	std	Y+8, r21	; 0x08
    1078:	89 e0       	ldi	r24, 0x09	; 9
    107a:	e8 2e       	mov	r14, r24
    107c:	f1 2c       	mov	r15, r1
    107e:	ec 0e       	add	r14, r28
    1080:	fd 1e       	adc	r15, r29
    1082:	ce 01       	movw	r24, r28
    1084:	01 96       	adiw	r24, 0x01	; 1
    1086:	b7 01       	movw	r22, r14
    1088:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
    108c:	8e 01       	movw	r16, r28
    108e:	0f 5e       	subi	r16, 0xEF	; 239
    1090:	1f 4f       	sbci	r17, 0xFF	; 255
    1092:	ce 01       	movw	r24, r28
    1094:	05 96       	adiw	r24, 0x05	; 5
    1096:	b8 01       	movw	r22, r16
    1098:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
    109c:	89 85       	ldd	r24, Y+9	; 0x09
    109e:	82 30       	cpi	r24, 0x02	; 2
    10a0:	40 f0       	brcs	.+16     	; 0x10b2 <__ltsf2+0x56>
    10a2:	89 89       	ldd	r24, Y+17	; 0x11
    10a4:	82 30       	cpi	r24, 0x02	; 2
    10a6:	28 f0       	brcs	.+10     	; 0x10b2 <__ltsf2+0x56>
    10a8:	c7 01       	movw	r24, r14
    10aa:	b8 01       	movw	r22, r16
    10ac:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__fpcmp_parts_f>
    10b0:	01 c0       	rjmp	.+2      	; 0x10b4 <__ltsf2+0x58>
    10b2:	81 e0       	ldi	r24, 0x01	; 1
    10b4:	68 96       	adiw	r28, 0x18	; 24
    10b6:	e6 e0       	ldi	r30, 0x06	; 6
    10b8:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <__epilogue_restores__+0x18>

000010bc <__fixsfsi>:
    10bc:	ac e0       	ldi	r26, 0x0C	; 12
    10be:	b0 e0       	ldi	r27, 0x00	; 0
    10c0:	e4 e6       	ldi	r30, 0x64	; 100
    10c2:	f8 e0       	ldi	r31, 0x08	; 8
    10c4:	0c 94 8f 0a 	jmp	0x151e	; 0x151e <__prologue_saves__+0x20>
    10c8:	69 83       	std	Y+1, r22	; 0x01
    10ca:	7a 83       	std	Y+2, r23	; 0x02
    10cc:	8b 83       	std	Y+3, r24	; 0x03
    10ce:	9c 83       	std	Y+4, r25	; 0x04
    10d0:	ce 01       	movw	r24, r28
    10d2:	01 96       	adiw	r24, 0x01	; 1
    10d4:	be 01       	movw	r22, r28
    10d6:	6b 5f       	subi	r22, 0xFB	; 251
    10d8:	7f 4f       	sbci	r23, 0xFF	; 255
    10da:	0e 94 87 09 	call	0x130e	; 0x130e <__unpack_f>
    10de:	8d 81       	ldd	r24, Y+5	; 0x05
    10e0:	82 30       	cpi	r24, 0x02	; 2
    10e2:	61 f1       	breq	.+88     	; 0x113c <__fixsfsi+0x80>
    10e4:	82 30       	cpi	r24, 0x02	; 2
    10e6:	50 f1       	brcs	.+84     	; 0x113c <__fixsfsi+0x80>
    10e8:	84 30       	cpi	r24, 0x04	; 4
    10ea:	21 f4       	brne	.+8      	; 0x10f4 <__fixsfsi+0x38>
    10ec:	8e 81       	ldd	r24, Y+6	; 0x06
    10ee:	88 23       	and	r24, r24
    10f0:	51 f1       	breq	.+84     	; 0x1146 <__fixsfsi+0x8a>
    10f2:	2e c0       	rjmp	.+92     	; 0x1150 <__fixsfsi+0x94>
    10f4:	2f 81       	ldd	r18, Y+7	; 0x07
    10f6:	38 85       	ldd	r19, Y+8	; 0x08
    10f8:	37 fd       	sbrc	r19, 7
    10fa:	20 c0       	rjmp	.+64     	; 0x113c <__fixsfsi+0x80>
    10fc:	6e 81       	ldd	r22, Y+6	; 0x06
    10fe:	2f 31       	cpi	r18, 0x1F	; 31
    1100:	31 05       	cpc	r19, r1
    1102:	1c f0       	brlt	.+6      	; 0x110a <__fixsfsi+0x4e>
    1104:	66 23       	and	r22, r22
    1106:	f9 f0       	breq	.+62     	; 0x1146 <__fixsfsi+0x8a>
    1108:	23 c0       	rjmp	.+70     	; 0x1150 <__fixsfsi+0x94>
    110a:	8e e1       	ldi	r24, 0x1E	; 30
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	82 1b       	sub	r24, r18
    1110:	93 0b       	sbc	r25, r19
    1112:	29 85       	ldd	r18, Y+9	; 0x09
    1114:	3a 85       	ldd	r19, Y+10	; 0x0a
    1116:	4b 85       	ldd	r20, Y+11	; 0x0b
    1118:	5c 85       	ldd	r21, Y+12	; 0x0c
    111a:	04 c0       	rjmp	.+8      	; 0x1124 <__fixsfsi+0x68>
    111c:	56 95       	lsr	r21
    111e:	47 95       	ror	r20
    1120:	37 95       	ror	r19
    1122:	27 95       	ror	r18
    1124:	8a 95       	dec	r24
    1126:	d2 f7       	brpl	.-12     	; 0x111c <__fixsfsi+0x60>
    1128:	66 23       	and	r22, r22
    112a:	b1 f0       	breq	.+44     	; 0x1158 <__fixsfsi+0x9c>
    112c:	50 95       	com	r21
    112e:	40 95       	com	r20
    1130:	30 95       	com	r19
    1132:	21 95       	neg	r18
    1134:	3f 4f       	sbci	r19, 0xFF	; 255
    1136:	4f 4f       	sbci	r20, 0xFF	; 255
    1138:	5f 4f       	sbci	r21, 0xFF	; 255
    113a:	0e c0       	rjmp	.+28     	; 0x1158 <__fixsfsi+0x9c>
    113c:	20 e0       	ldi	r18, 0x00	; 0
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	40 e0       	ldi	r20, 0x00	; 0
    1142:	50 e0       	ldi	r21, 0x00	; 0
    1144:	09 c0       	rjmp	.+18     	; 0x1158 <__fixsfsi+0x9c>
    1146:	2f ef       	ldi	r18, 0xFF	; 255
    1148:	3f ef       	ldi	r19, 0xFF	; 255
    114a:	4f ef       	ldi	r20, 0xFF	; 255
    114c:	5f e7       	ldi	r21, 0x7F	; 127
    114e:	04 c0       	rjmp	.+8      	; 0x1158 <__fixsfsi+0x9c>
    1150:	20 e0       	ldi	r18, 0x00	; 0
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	40 e0       	ldi	r20, 0x00	; 0
    1156:	50 e8       	ldi	r21, 0x80	; 128
    1158:	b9 01       	movw	r22, r18
    115a:	ca 01       	movw	r24, r20
    115c:	2c 96       	adiw	r28, 0x0c	; 12
    115e:	e2 e0       	ldi	r30, 0x02	; 2
    1160:	0c 94 ab 0a 	jmp	0x1556	; 0x1556 <__epilogue_restores__+0x20>

00001164 <__pack_f>:
    1164:	df 92       	push	r13
    1166:	ef 92       	push	r14
    1168:	ff 92       	push	r15
    116a:	0f 93       	push	r16
    116c:	1f 93       	push	r17
    116e:	fc 01       	movw	r30, r24
    1170:	e4 80       	ldd	r14, Z+4	; 0x04
    1172:	f5 80       	ldd	r15, Z+5	; 0x05
    1174:	06 81       	ldd	r16, Z+6	; 0x06
    1176:	17 81       	ldd	r17, Z+7	; 0x07
    1178:	d1 80       	ldd	r13, Z+1	; 0x01
    117a:	80 81       	ld	r24, Z
    117c:	82 30       	cpi	r24, 0x02	; 2
    117e:	48 f4       	brcc	.+18     	; 0x1192 <__pack_f+0x2e>
    1180:	80 e0       	ldi	r24, 0x00	; 0
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	a0 e1       	ldi	r26, 0x10	; 16
    1186:	b0 e0       	ldi	r27, 0x00	; 0
    1188:	e8 2a       	or	r14, r24
    118a:	f9 2a       	or	r15, r25
    118c:	0a 2b       	or	r16, r26
    118e:	1b 2b       	or	r17, r27
    1190:	a5 c0       	rjmp	.+330    	; 0x12dc <__pack_f+0x178>
    1192:	84 30       	cpi	r24, 0x04	; 4
    1194:	09 f4       	brne	.+2      	; 0x1198 <__pack_f+0x34>
    1196:	9f c0       	rjmp	.+318    	; 0x12d6 <__pack_f+0x172>
    1198:	82 30       	cpi	r24, 0x02	; 2
    119a:	21 f4       	brne	.+8      	; 0x11a4 <__pack_f+0x40>
    119c:	ee 24       	eor	r14, r14
    119e:	ff 24       	eor	r15, r15
    11a0:	87 01       	movw	r16, r14
    11a2:	05 c0       	rjmp	.+10     	; 0x11ae <__pack_f+0x4a>
    11a4:	e1 14       	cp	r14, r1
    11a6:	f1 04       	cpc	r15, r1
    11a8:	01 05       	cpc	r16, r1
    11aa:	11 05       	cpc	r17, r1
    11ac:	19 f4       	brne	.+6      	; 0x11b4 <__pack_f+0x50>
    11ae:	e0 e0       	ldi	r30, 0x00	; 0
    11b0:	f0 e0       	ldi	r31, 0x00	; 0
    11b2:	96 c0       	rjmp	.+300    	; 0x12e0 <__pack_f+0x17c>
    11b4:	62 81       	ldd	r22, Z+2	; 0x02
    11b6:	73 81       	ldd	r23, Z+3	; 0x03
    11b8:	9f ef       	ldi	r25, 0xFF	; 255
    11ba:	62 38       	cpi	r22, 0x82	; 130
    11bc:	79 07       	cpc	r23, r25
    11be:	0c f0       	brlt	.+2      	; 0x11c2 <__pack_f+0x5e>
    11c0:	5b c0       	rjmp	.+182    	; 0x1278 <__pack_f+0x114>
    11c2:	22 e8       	ldi	r18, 0x82	; 130
    11c4:	3f ef       	ldi	r19, 0xFF	; 255
    11c6:	26 1b       	sub	r18, r22
    11c8:	37 0b       	sbc	r19, r23
    11ca:	2a 31       	cpi	r18, 0x1A	; 26
    11cc:	31 05       	cpc	r19, r1
    11ce:	2c f0       	brlt	.+10     	; 0x11da <__pack_f+0x76>
    11d0:	20 e0       	ldi	r18, 0x00	; 0
    11d2:	30 e0       	ldi	r19, 0x00	; 0
    11d4:	40 e0       	ldi	r20, 0x00	; 0
    11d6:	50 e0       	ldi	r21, 0x00	; 0
    11d8:	2a c0       	rjmp	.+84     	; 0x122e <__pack_f+0xca>
    11da:	b8 01       	movw	r22, r16
    11dc:	a7 01       	movw	r20, r14
    11de:	02 2e       	mov	r0, r18
    11e0:	04 c0       	rjmp	.+8      	; 0x11ea <__pack_f+0x86>
    11e2:	76 95       	lsr	r23
    11e4:	67 95       	ror	r22
    11e6:	57 95       	ror	r21
    11e8:	47 95       	ror	r20
    11ea:	0a 94       	dec	r0
    11ec:	d2 f7       	brpl	.-12     	; 0x11e2 <__pack_f+0x7e>
    11ee:	81 e0       	ldi	r24, 0x01	; 1
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	a0 e0       	ldi	r26, 0x00	; 0
    11f4:	b0 e0       	ldi	r27, 0x00	; 0
    11f6:	04 c0       	rjmp	.+8      	; 0x1200 <__pack_f+0x9c>
    11f8:	88 0f       	add	r24, r24
    11fa:	99 1f       	adc	r25, r25
    11fc:	aa 1f       	adc	r26, r26
    11fe:	bb 1f       	adc	r27, r27
    1200:	2a 95       	dec	r18
    1202:	d2 f7       	brpl	.-12     	; 0x11f8 <__pack_f+0x94>
    1204:	01 97       	sbiw	r24, 0x01	; 1
    1206:	a1 09       	sbc	r26, r1
    1208:	b1 09       	sbc	r27, r1
    120a:	8e 21       	and	r24, r14
    120c:	9f 21       	and	r25, r15
    120e:	a0 23       	and	r26, r16
    1210:	b1 23       	and	r27, r17
    1212:	00 97       	sbiw	r24, 0x00	; 0
    1214:	a1 05       	cpc	r26, r1
    1216:	b1 05       	cpc	r27, r1
    1218:	21 f0       	breq	.+8      	; 0x1222 <__pack_f+0xbe>
    121a:	81 e0       	ldi	r24, 0x01	; 1
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	a0 e0       	ldi	r26, 0x00	; 0
    1220:	b0 e0       	ldi	r27, 0x00	; 0
    1222:	9a 01       	movw	r18, r20
    1224:	ab 01       	movw	r20, r22
    1226:	28 2b       	or	r18, r24
    1228:	39 2b       	or	r19, r25
    122a:	4a 2b       	or	r20, r26
    122c:	5b 2b       	or	r21, r27
    122e:	da 01       	movw	r26, r20
    1230:	c9 01       	movw	r24, r18
    1232:	8f 77       	andi	r24, 0x7F	; 127
    1234:	90 70       	andi	r25, 0x00	; 0
    1236:	a0 70       	andi	r26, 0x00	; 0
    1238:	b0 70       	andi	r27, 0x00	; 0
    123a:	80 34       	cpi	r24, 0x40	; 64
    123c:	91 05       	cpc	r25, r1
    123e:	a1 05       	cpc	r26, r1
    1240:	b1 05       	cpc	r27, r1
    1242:	39 f4       	brne	.+14     	; 0x1252 <__pack_f+0xee>
    1244:	27 ff       	sbrs	r18, 7
    1246:	09 c0       	rjmp	.+18     	; 0x125a <__pack_f+0xf6>
    1248:	20 5c       	subi	r18, 0xC0	; 192
    124a:	3f 4f       	sbci	r19, 0xFF	; 255
    124c:	4f 4f       	sbci	r20, 0xFF	; 255
    124e:	5f 4f       	sbci	r21, 0xFF	; 255
    1250:	04 c0       	rjmp	.+8      	; 0x125a <__pack_f+0xf6>
    1252:	21 5c       	subi	r18, 0xC1	; 193
    1254:	3f 4f       	sbci	r19, 0xFF	; 255
    1256:	4f 4f       	sbci	r20, 0xFF	; 255
    1258:	5f 4f       	sbci	r21, 0xFF	; 255
    125a:	e0 e0       	ldi	r30, 0x00	; 0
    125c:	f0 e0       	ldi	r31, 0x00	; 0
    125e:	20 30       	cpi	r18, 0x00	; 0
    1260:	a0 e0       	ldi	r26, 0x00	; 0
    1262:	3a 07       	cpc	r19, r26
    1264:	a0 e0       	ldi	r26, 0x00	; 0
    1266:	4a 07       	cpc	r20, r26
    1268:	a0 e4       	ldi	r26, 0x40	; 64
    126a:	5a 07       	cpc	r21, r26
    126c:	10 f0       	brcs	.+4      	; 0x1272 <__pack_f+0x10e>
    126e:	e1 e0       	ldi	r30, 0x01	; 1
    1270:	f0 e0       	ldi	r31, 0x00	; 0
    1272:	79 01       	movw	r14, r18
    1274:	8a 01       	movw	r16, r20
    1276:	27 c0       	rjmp	.+78     	; 0x12c6 <__pack_f+0x162>
    1278:	60 38       	cpi	r22, 0x80	; 128
    127a:	71 05       	cpc	r23, r1
    127c:	64 f5       	brge	.+88     	; 0x12d6 <__pack_f+0x172>
    127e:	fb 01       	movw	r30, r22
    1280:	e1 58       	subi	r30, 0x81	; 129
    1282:	ff 4f       	sbci	r31, 0xFF	; 255
    1284:	d8 01       	movw	r26, r16
    1286:	c7 01       	movw	r24, r14
    1288:	8f 77       	andi	r24, 0x7F	; 127
    128a:	90 70       	andi	r25, 0x00	; 0
    128c:	a0 70       	andi	r26, 0x00	; 0
    128e:	b0 70       	andi	r27, 0x00	; 0
    1290:	80 34       	cpi	r24, 0x40	; 64
    1292:	91 05       	cpc	r25, r1
    1294:	a1 05       	cpc	r26, r1
    1296:	b1 05       	cpc	r27, r1
    1298:	39 f4       	brne	.+14     	; 0x12a8 <__pack_f+0x144>
    129a:	e7 fe       	sbrs	r14, 7
    129c:	0d c0       	rjmp	.+26     	; 0x12b8 <__pack_f+0x154>
    129e:	80 e4       	ldi	r24, 0x40	; 64
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	a0 e0       	ldi	r26, 0x00	; 0
    12a4:	b0 e0       	ldi	r27, 0x00	; 0
    12a6:	04 c0       	rjmp	.+8      	; 0x12b0 <__pack_f+0x14c>
    12a8:	8f e3       	ldi	r24, 0x3F	; 63
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	a0 e0       	ldi	r26, 0x00	; 0
    12ae:	b0 e0       	ldi	r27, 0x00	; 0
    12b0:	e8 0e       	add	r14, r24
    12b2:	f9 1e       	adc	r15, r25
    12b4:	0a 1f       	adc	r16, r26
    12b6:	1b 1f       	adc	r17, r27
    12b8:	17 ff       	sbrs	r17, 7
    12ba:	05 c0       	rjmp	.+10     	; 0x12c6 <__pack_f+0x162>
    12bc:	16 95       	lsr	r17
    12be:	07 95       	ror	r16
    12c0:	f7 94       	ror	r15
    12c2:	e7 94       	ror	r14
    12c4:	31 96       	adiw	r30, 0x01	; 1
    12c6:	87 e0       	ldi	r24, 0x07	; 7
    12c8:	16 95       	lsr	r17
    12ca:	07 95       	ror	r16
    12cc:	f7 94       	ror	r15
    12ce:	e7 94       	ror	r14
    12d0:	8a 95       	dec	r24
    12d2:	d1 f7       	brne	.-12     	; 0x12c8 <__pack_f+0x164>
    12d4:	05 c0       	rjmp	.+10     	; 0x12e0 <__pack_f+0x17c>
    12d6:	ee 24       	eor	r14, r14
    12d8:	ff 24       	eor	r15, r15
    12da:	87 01       	movw	r16, r14
    12dc:	ef ef       	ldi	r30, 0xFF	; 255
    12de:	f0 e0       	ldi	r31, 0x00	; 0
    12e0:	6e 2f       	mov	r22, r30
    12e2:	67 95       	ror	r22
    12e4:	66 27       	eor	r22, r22
    12e6:	67 95       	ror	r22
    12e8:	90 2f       	mov	r25, r16
    12ea:	9f 77       	andi	r25, 0x7F	; 127
    12ec:	d7 94       	ror	r13
    12ee:	dd 24       	eor	r13, r13
    12f0:	d7 94       	ror	r13
    12f2:	8e 2f       	mov	r24, r30
    12f4:	86 95       	lsr	r24
    12f6:	49 2f       	mov	r20, r25
    12f8:	46 2b       	or	r20, r22
    12fa:	58 2f       	mov	r21, r24
    12fc:	5d 29       	or	r21, r13
    12fe:	b7 01       	movw	r22, r14
    1300:	ca 01       	movw	r24, r20
    1302:	1f 91       	pop	r17
    1304:	0f 91       	pop	r16
    1306:	ff 90       	pop	r15
    1308:	ef 90       	pop	r14
    130a:	df 90       	pop	r13
    130c:	08 95       	ret

0000130e <__unpack_f>:
    130e:	fc 01       	movw	r30, r24
    1310:	db 01       	movw	r26, r22
    1312:	40 81       	ld	r20, Z
    1314:	51 81       	ldd	r21, Z+1	; 0x01
    1316:	22 81       	ldd	r18, Z+2	; 0x02
    1318:	62 2f       	mov	r22, r18
    131a:	6f 77       	andi	r22, 0x7F	; 127
    131c:	70 e0       	ldi	r23, 0x00	; 0
    131e:	22 1f       	adc	r18, r18
    1320:	22 27       	eor	r18, r18
    1322:	22 1f       	adc	r18, r18
    1324:	93 81       	ldd	r25, Z+3	; 0x03
    1326:	89 2f       	mov	r24, r25
    1328:	88 0f       	add	r24, r24
    132a:	82 2b       	or	r24, r18
    132c:	28 2f       	mov	r18, r24
    132e:	30 e0       	ldi	r19, 0x00	; 0
    1330:	99 1f       	adc	r25, r25
    1332:	99 27       	eor	r25, r25
    1334:	99 1f       	adc	r25, r25
    1336:	11 96       	adiw	r26, 0x01	; 1
    1338:	9c 93       	st	X, r25
    133a:	11 97       	sbiw	r26, 0x01	; 1
    133c:	21 15       	cp	r18, r1
    133e:	31 05       	cpc	r19, r1
    1340:	a9 f5       	brne	.+106    	; 0x13ac <__unpack_f+0x9e>
    1342:	41 15       	cp	r20, r1
    1344:	51 05       	cpc	r21, r1
    1346:	61 05       	cpc	r22, r1
    1348:	71 05       	cpc	r23, r1
    134a:	11 f4       	brne	.+4      	; 0x1350 <__unpack_f+0x42>
    134c:	82 e0       	ldi	r24, 0x02	; 2
    134e:	37 c0       	rjmp	.+110    	; 0x13be <__unpack_f+0xb0>
    1350:	82 e8       	ldi	r24, 0x82	; 130
    1352:	9f ef       	ldi	r25, 0xFF	; 255
    1354:	13 96       	adiw	r26, 0x03	; 3
    1356:	9c 93       	st	X, r25
    1358:	8e 93       	st	-X, r24
    135a:	12 97       	sbiw	r26, 0x02	; 2
    135c:	9a 01       	movw	r18, r20
    135e:	ab 01       	movw	r20, r22
    1360:	67 e0       	ldi	r22, 0x07	; 7
    1362:	22 0f       	add	r18, r18
    1364:	33 1f       	adc	r19, r19
    1366:	44 1f       	adc	r20, r20
    1368:	55 1f       	adc	r21, r21
    136a:	6a 95       	dec	r22
    136c:	d1 f7       	brne	.-12     	; 0x1362 <__unpack_f+0x54>
    136e:	83 e0       	ldi	r24, 0x03	; 3
    1370:	8c 93       	st	X, r24
    1372:	0d c0       	rjmp	.+26     	; 0x138e <__unpack_f+0x80>
    1374:	22 0f       	add	r18, r18
    1376:	33 1f       	adc	r19, r19
    1378:	44 1f       	adc	r20, r20
    137a:	55 1f       	adc	r21, r21
    137c:	12 96       	adiw	r26, 0x02	; 2
    137e:	8d 91       	ld	r24, X+
    1380:	9c 91       	ld	r25, X
    1382:	13 97       	sbiw	r26, 0x03	; 3
    1384:	01 97       	sbiw	r24, 0x01	; 1
    1386:	13 96       	adiw	r26, 0x03	; 3
    1388:	9c 93       	st	X, r25
    138a:	8e 93       	st	-X, r24
    138c:	12 97       	sbiw	r26, 0x02	; 2
    138e:	20 30       	cpi	r18, 0x00	; 0
    1390:	80 e0       	ldi	r24, 0x00	; 0
    1392:	38 07       	cpc	r19, r24
    1394:	80 e0       	ldi	r24, 0x00	; 0
    1396:	48 07       	cpc	r20, r24
    1398:	80 e4       	ldi	r24, 0x40	; 64
    139a:	58 07       	cpc	r21, r24
    139c:	58 f3       	brcs	.-42     	; 0x1374 <__unpack_f+0x66>
    139e:	14 96       	adiw	r26, 0x04	; 4
    13a0:	2d 93       	st	X+, r18
    13a2:	3d 93       	st	X+, r19
    13a4:	4d 93       	st	X+, r20
    13a6:	5c 93       	st	X, r21
    13a8:	17 97       	sbiw	r26, 0x07	; 7
    13aa:	08 95       	ret
    13ac:	2f 3f       	cpi	r18, 0xFF	; 255
    13ae:	31 05       	cpc	r19, r1
    13b0:	79 f4       	brne	.+30     	; 0x13d0 <__unpack_f+0xc2>
    13b2:	41 15       	cp	r20, r1
    13b4:	51 05       	cpc	r21, r1
    13b6:	61 05       	cpc	r22, r1
    13b8:	71 05       	cpc	r23, r1
    13ba:	19 f4       	brne	.+6      	; 0x13c2 <__unpack_f+0xb4>
    13bc:	84 e0       	ldi	r24, 0x04	; 4
    13be:	8c 93       	st	X, r24
    13c0:	08 95       	ret
    13c2:	64 ff       	sbrs	r22, 4
    13c4:	03 c0       	rjmp	.+6      	; 0x13cc <__unpack_f+0xbe>
    13c6:	81 e0       	ldi	r24, 0x01	; 1
    13c8:	8c 93       	st	X, r24
    13ca:	12 c0       	rjmp	.+36     	; 0x13f0 <__unpack_f+0xe2>
    13cc:	1c 92       	st	X, r1
    13ce:	10 c0       	rjmp	.+32     	; 0x13f0 <__unpack_f+0xe2>
    13d0:	2f 57       	subi	r18, 0x7F	; 127
    13d2:	30 40       	sbci	r19, 0x00	; 0
    13d4:	13 96       	adiw	r26, 0x03	; 3
    13d6:	3c 93       	st	X, r19
    13d8:	2e 93       	st	-X, r18
    13da:	12 97       	sbiw	r26, 0x02	; 2
    13dc:	83 e0       	ldi	r24, 0x03	; 3
    13de:	8c 93       	st	X, r24
    13e0:	87 e0       	ldi	r24, 0x07	; 7
    13e2:	44 0f       	add	r20, r20
    13e4:	55 1f       	adc	r21, r21
    13e6:	66 1f       	adc	r22, r22
    13e8:	77 1f       	adc	r23, r23
    13ea:	8a 95       	dec	r24
    13ec:	d1 f7       	brne	.-12     	; 0x13e2 <__unpack_f+0xd4>
    13ee:	70 64       	ori	r23, 0x40	; 64
    13f0:	14 96       	adiw	r26, 0x04	; 4
    13f2:	4d 93       	st	X+, r20
    13f4:	5d 93       	st	X+, r21
    13f6:	6d 93       	st	X+, r22
    13f8:	7c 93       	st	X, r23
    13fa:	17 97       	sbiw	r26, 0x07	; 7
    13fc:	08 95       	ret

000013fe <__fpcmp_parts_f>:
    13fe:	1f 93       	push	r17
    1400:	dc 01       	movw	r26, r24
    1402:	fb 01       	movw	r30, r22
    1404:	9c 91       	ld	r25, X
    1406:	92 30       	cpi	r25, 0x02	; 2
    1408:	08 f4       	brcc	.+2      	; 0x140c <__fpcmp_parts_f+0xe>
    140a:	47 c0       	rjmp	.+142    	; 0x149a <__fpcmp_parts_f+0x9c>
    140c:	80 81       	ld	r24, Z
    140e:	82 30       	cpi	r24, 0x02	; 2
    1410:	08 f4       	brcc	.+2      	; 0x1414 <__fpcmp_parts_f+0x16>
    1412:	43 c0       	rjmp	.+134    	; 0x149a <__fpcmp_parts_f+0x9c>
    1414:	94 30       	cpi	r25, 0x04	; 4
    1416:	51 f4       	brne	.+20     	; 0x142c <__fpcmp_parts_f+0x2e>
    1418:	11 96       	adiw	r26, 0x01	; 1
    141a:	1c 91       	ld	r17, X
    141c:	84 30       	cpi	r24, 0x04	; 4
    141e:	99 f5       	brne	.+102    	; 0x1486 <__fpcmp_parts_f+0x88>
    1420:	81 81       	ldd	r24, Z+1	; 0x01
    1422:	68 2f       	mov	r22, r24
    1424:	70 e0       	ldi	r23, 0x00	; 0
    1426:	61 1b       	sub	r22, r17
    1428:	71 09       	sbc	r23, r1
    142a:	3f c0       	rjmp	.+126    	; 0x14aa <__fpcmp_parts_f+0xac>
    142c:	84 30       	cpi	r24, 0x04	; 4
    142e:	21 f0       	breq	.+8      	; 0x1438 <__fpcmp_parts_f+0x3a>
    1430:	92 30       	cpi	r25, 0x02	; 2
    1432:	31 f4       	brne	.+12     	; 0x1440 <__fpcmp_parts_f+0x42>
    1434:	82 30       	cpi	r24, 0x02	; 2
    1436:	b9 f1       	breq	.+110    	; 0x14a6 <__fpcmp_parts_f+0xa8>
    1438:	81 81       	ldd	r24, Z+1	; 0x01
    143a:	88 23       	and	r24, r24
    143c:	89 f1       	breq	.+98     	; 0x14a0 <__fpcmp_parts_f+0xa2>
    143e:	2d c0       	rjmp	.+90     	; 0x149a <__fpcmp_parts_f+0x9c>
    1440:	11 96       	adiw	r26, 0x01	; 1
    1442:	1c 91       	ld	r17, X
    1444:	11 97       	sbiw	r26, 0x01	; 1
    1446:	82 30       	cpi	r24, 0x02	; 2
    1448:	f1 f0       	breq	.+60     	; 0x1486 <__fpcmp_parts_f+0x88>
    144a:	81 81       	ldd	r24, Z+1	; 0x01
    144c:	18 17       	cp	r17, r24
    144e:	d9 f4       	brne	.+54     	; 0x1486 <__fpcmp_parts_f+0x88>
    1450:	12 96       	adiw	r26, 0x02	; 2
    1452:	2d 91       	ld	r18, X+
    1454:	3c 91       	ld	r19, X
    1456:	13 97       	sbiw	r26, 0x03	; 3
    1458:	82 81       	ldd	r24, Z+2	; 0x02
    145a:	93 81       	ldd	r25, Z+3	; 0x03
    145c:	82 17       	cp	r24, r18
    145e:	93 07       	cpc	r25, r19
    1460:	94 f0       	brlt	.+36     	; 0x1486 <__fpcmp_parts_f+0x88>
    1462:	28 17       	cp	r18, r24
    1464:	39 07       	cpc	r19, r25
    1466:	bc f0       	brlt	.+46     	; 0x1496 <__fpcmp_parts_f+0x98>
    1468:	14 96       	adiw	r26, 0x04	; 4
    146a:	8d 91       	ld	r24, X+
    146c:	9d 91       	ld	r25, X+
    146e:	0d 90       	ld	r0, X+
    1470:	bc 91       	ld	r27, X
    1472:	a0 2d       	mov	r26, r0
    1474:	24 81       	ldd	r18, Z+4	; 0x04
    1476:	35 81       	ldd	r19, Z+5	; 0x05
    1478:	46 81       	ldd	r20, Z+6	; 0x06
    147a:	57 81       	ldd	r21, Z+7	; 0x07
    147c:	28 17       	cp	r18, r24
    147e:	39 07       	cpc	r19, r25
    1480:	4a 07       	cpc	r20, r26
    1482:	5b 07       	cpc	r21, r27
    1484:	18 f4       	brcc	.+6      	; 0x148c <__fpcmp_parts_f+0x8e>
    1486:	11 23       	and	r17, r17
    1488:	41 f0       	breq	.+16     	; 0x149a <__fpcmp_parts_f+0x9c>
    148a:	0a c0       	rjmp	.+20     	; 0x14a0 <__fpcmp_parts_f+0xa2>
    148c:	82 17       	cp	r24, r18
    148e:	93 07       	cpc	r25, r19
    1490:	a4 07       	cpc	r26, r20
    1492:	b5 07       	cpc	r27, r21
    1494:	40 f4       	brcc	.+16     	; 0x14a6 <__fpcmp_parts_f+0xa8>
    1496:	11 23       	and	r17, r17
    1498:	19 f0       	breq	.+6      	; 0x14a0 <__fpcmp_parts_f+0xa2>
    149a:	61 e0       	ldi	r22, 0x01	; 1
    149c:	70 e0       	ldi	r23, 0x00	; 0
    149e:	05 c0       	rjmp	.+10     	; 0x14aa <__fpcmp_parts_f+0xac>
    14a0:	6f ef       	ldi	r22, 0xFF	; 255
    14a2:	7f ef       	ldi	r23, 0xFF	; 255
    14a4:	02 c0       	rjmp	.+4      	; 0x14aa <__fpcmp_parts_f+0xac>
    14a6:	60 e0       	ldi	r22, 0x00	; 0
    14a8:	70 e0       	ldi	r23, 0x00	; 0
    14aa:	cb 01       	movw	r24, r22
    14ac:	1f 91       	pop	r17
    14ae:	08 95       	ret

000014b0 <__divmodhi4>:
    14b0:	97 fb       	bst	r25, 7
    14b2:	09 2e       	mov	r0, r25
    14b4:	07 26       	eor	r0, r23
    14b6:	0a d0       	rcall	.+20     	; 0x14cc <__divmodhi4_neg1>
    14b8:	77 fd       	sbrc	r23, 7
    14ba:	04 d0       	rcall	.+8      	; 0x14c4 <__divmodhi4_neg2>
    14bc:	0c d0       	rcall	.+24     	; 0x14d6 <__udivmodhi4>
    14be:	06 d0       	rcall	.+12     	; 0x14cc <__divmodhi4_neg1>
    14c0:	00 20       	and	r0, r0
    14c2:	1a f4       	brpl	.+6      	; 0x14ca <__divmodhi4_exit>

000014c4 <__divmodhi4_neg2>:
    14c4:	70 95       	com	r23
    14c6:	61 95       	neg	r22
    14c8:	7f 4f       	sbci	r23, 0xFF	; 255

000014ca <__divmodhi4_exit>:
    14ca:	08 95       	ret

000014cc <__divmodhi4_neg1>:
    14cc:	f6 f7       	brtc	.-4      	; 0x14ca <__divmodhi4_exit>
    14ce:	90 95       	com	r25
    14d0:	81 95       	neg	r24
    14d2:	9f 4f       	sbci	r25, 0xFF	; 255
    14d4:	08 95       	ret

000014d6 <__udivmodhi4>:
    14d6:	aa 1b       	sub	r26, r26
    14d8:	bb 1b       	sub	r27, r27
    14da:	51 e1       	ldi	r21, 0x11	; 17
    14dc:	07 c0       	rjmp	.+14     	; 0x14ec <__udivmodhi4_ep>

000014de <__udivmodhi4_loop>:
    14de:	aa 1f       	adc	r26, r26
    14e0:	bb 1f       	adc	r27, r27
    14e2:	a6 17       	cp	r26, r22
    14e4:	b7 07       	cpc	r27, r23
    14e6:	10 f0       	brcs	.+4      	; 0x14ec <__udivmodhi4_ep>
    14e8:	a6 1b       	sub	r26, r22
    14ea:	b7 0b       	sbc	r27, r23

000014ec <__udivmodhi4_ep>:
    14ec:	88 1f       	adc	r24, r24
    14ee:	99 1f       	adc	r25, r25
    14f0:	5a 95       	dec	r21
    14f2:	a9 f7       	brne	.-22     	; 0x14de <__udivmodhi4_loop>
    14f4:	80 95       	com	r24
    14f6:	90 95       	com	r25
    14f8:	bc 01       	movw	r22, r24
    14fa:	cd 01       	movw	r24, r26
    14fc:	08 95       	ret

000014fe <__prologue_saves__>:
    14fe:	2f 92       	push	r2
    1500:	3f 92       	push	r3
    1502:	4f 92       	push	r4
    1504:	5f 92       	push	r5
    1506:	6f 92       	push	r6
    1508:	7f 92       	push	r7
    150a:	8f 92       	push	r8
    150c:	9f 92       	push	r9
    150e:	af 92       	push	r10
    1510:	bf 92       	push	r11
    1512:	cf 92       	push	r12
    1514:	df 92       	push	r13
    1516:	ef 92       	push	r14
    1518:	ff 92       	push	r15
    151a:	0f 93       	push	r16
    151c:	1f 93       	push	r17
    151e:	cf 93       	push	r28
    1520:	df 93       	push	r29
    1522:	cd b7       	in	r28, 0x3d	; 61
    1524:	de b7       	in	r29, 0x3e	; 62
    1526:	ca 1b       	sub	r28, r26
    1528:	db 0b       	sbc	r29, r27
    152a:	0f b6       	in	r0, 0x3f	; 63
    152c:	f8 94       	cli
    152e:	de bf       	out	0x3e, r29	; 62
    1530:	0f be       	out	0x3f, r0	; 63
    1532:	cd bf       	out	0x3d, r28	; 61
    1534:	19 94       	eijmp

00001536 <__epilogue_restores__>:
    1536:	2a 88       	ldd	r2, Y+18	; 0x12
    1538:	39 88       	ldd	r3, Y+17	; 0x11
    153a:	48 88       	ldd	r4, Y+16	; 0x10
    153c:	5f 84       	ldd	r5, Y+15	; 0x0f
    153e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1540:	7d 84       	ldd	r7, Y+13	; 0x0d
    1542:	8c 84       	ldd	r8, Y+12	; 0x0c
    1544:	9b 84       	ldd	r9, Y+11	; 0x0b
    1546:	aa 84       	ldd	r10, Y+10	; 0x0a
    1548:	b9 84       	ldd	r11, Y+9	; 0x09
    154a:	c8 84       	ldd	r12, Y+8	; 0x08
    154c:	df 80       	ldd	r13, Y+7	; 0x07
    154e:	ee 80       	ldd	r14, Y+6	; 0x06
    1550:	fd 80       	ldd	r15, Y+5	; 0x05
    1552:	0c 81       	ldd	r16, Y+4	; 0x04
    1554:	1b 81       	ldd	r17, Y+3	; 0x03
    1556:	aa 81       	ldd	r26, Y+2	; 0x02
    1558:	b9 81       	ldd	r27, Y+1	; 0x01
    155a:	ce 0f       	add	r28, r30
    155c:	d1 1d       	adc	r29, r1
    155e:	0f b6       	in	r0, 0x3f	; 63
    1560:	f8 94       	cli
    1562:	de bf       	out	0x3e, r29	; 62
    1564:	0f be       	out	0x3f, r0	; 63
    1566:	cd bf       	out	0x3d, r28	; 61
    1568:	ed 01       	movw	r28, r26
    156a:	08 95       	ret

0000156c <_exit>:
    156c:	f8 94       	cli

0000156e <__stop_program>:
    156e:	ff cf       	rjmp	.-2      	; 0x156e <__stop_program>
